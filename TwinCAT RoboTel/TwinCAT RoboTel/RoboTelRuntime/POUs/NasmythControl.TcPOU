<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="NasmythControl" Id="{44cc95a4-2714-4f68-86b9-267e29c12088}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM NasmythControl
VAR_INPUT
	// unlocks the brake and enables the drive
	enable:	BOOL;
	// resets the drive
	reset: BOOL;
	// turns the Nasmyth mirror to left port (seen from top)
	left:	BOOL;
	// turns the Nasmyth mirror to right port (seen from top)
	right:	BOOL;
END_VAR
VAR_OUTPUT
	// Nasmyth drive error
	error:	BOOL;
	// drive ready
	Ready:	BOOL;
	// Nasmyth points to right mirror
	Nasmyth_right:		BOOL;
	// Nasmyth points to left mirror
	Nasmyth_left:		BOOL;
END_VAR
VAR
	//move to derotator
	nasmyth_move_left	AT%Q*: BOOL;
	nasmyth_move_right	AT%Q*: BOOL;
	// delay for the Nasmyth holding brake
	Nasmyth_delay:		TON;
	// status word for MQTT message
	Nasmyth_status:		WORD;
	// last status word to trigger MQTT message if different
	LastStatus:			WORD;
	// unlock the holding brake
	Nasmyth_unlock:		BOOL;
	// holding brake is unlocked
	Nasmyth_unlocked:	BOOL;
	// event log of error
	NasmythEvent: 		FB_Eventlog;
	NasmythLeftEvent:	FB_Eventlog;
	NasmythRightEvent:	FB_Eventlog;
	Nasmyth_Timeout:	TON := (PT := T#10S);
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[// get the inputs
Nasmyth_left := GVL_Telescope.nasmyth_limit_right;
Nasmyth_right := GVL_Telescope.nasmyth_limit_left;

// disable command, if position has been reached or 
IF Nasmyth_left OR right THEN
	left := FALSE;
END_IF

IF  Nasmyth_right OR left THEN
	right := FALSE;
END_IF

Nasmyth_status.0 := Nasmyth_unlocked;
Nasmyth_status.1 := error;
Nasmyth_status.2 := Nasmyth_left;
Nasmyth_status.3 := Nasmyth_right;
Nasmyth_status.4 := Nasmyth_Timeout.Q;
Nasmyth_status.5 := Ready;

Nasmyth_unlock := enable AND (left OR right);
// report Nasmyth unlocked after n milliseconds										
Nasmyth_delay(
	IN := Nasmyth_unlock,
	PT := T#250MS,
	Q => Nasmyth_unlocked);

// set the outputs
GVL_Telescope.nasmyth_lock := Nasmyth_unlock;

Nasmyth_Timeout(IN := (left AND NOT Nasmyth_left) OR (right AND NOT Nasmyth_right));

IF Nasmyth_status <> LastStatus THEN
	LastStatus := Nasmyth_status;
	MAIN.MQTTClient.Publish('telescope', 'nasmyth', 'NasmythUnlocked', BOOL_TO_STRING(Nasmyth_unlocked));
	MAIN.MQTTClient.Publish('telescope', 'nasmyth', 'NasmythError', BOOL_TO_STRING(error));
	MAIN.MQTTClient.Publish('telescope', 'nasmyth', 'NasmythReady', BOOL_TO_STRING(Ready));
	MAIN.MQTTClient.Publish('telescope', 'nasmyth', 'NasmythIsLeft', BOOL_TO_STRING(Nasmyth_left));
	MAIN.MQTTClient.Publish('telescope', 'nasmyth', 'NasmythIsRight', BOOL_TO_STRING(Nasmyth_right));
END_IF


NasmythEvent(	Trigger := error, 
				Level := ADSLOG_MSGTYPE_ERROR,
				OnMessage := 'Nasmyth axis error',
				OffMessage := 'OK',
				OffLevel := ADSLOG_MSGTYPE_HINT);

NasmythLeftEvent(	Trigger := Nasmyth_left, 
					Level := ADSLOG_MSGTYPE_HINT,
					OnMessage := 'Nasmyth is on left port');

NasmythRightEvent(	Trigger := Nasmyth_right, 
					Level := ADSLOG_MSGTYPE_HINT,
					OnMessage := 'Nasmyth is on right port');]]></ST>
    </Implementation>
    <LineIds Name="NasmythControl">
      <LineId Id="149" Count="0" />
      <LineId Id="126" Count="1" />
      <LineId Id="177" Count="0" />
      <LineId Id="176" Count="0" />
      <LineId Id="133" Count="6" />
      <LineId Id="143" Count="0" />
      <LineId Id="130" Count="0" />
      <LineId Id="145" Count="2" />
      <LineId Id="178" Count="0" />
      <LineId Id="229" Count="0" />
      <LineId Id="131" Count="0" />
      <LineId Id="33" Count="0" />
      <LineId Id="35" Count="0" />
      <LineId Id="12" Count="0" />
      <LineId Id="37" Count="0" />
      <LineId Id="13" Count="1" />
      <LineId Id="150" Count="0" />
      <LineId Id="140" Count="0" />
      <LineId Id="142" Count="0" />
      <LineId Id="43" Count="0" />
      <LineId Id="92" Count="4" />
      <LineId Id="124" Count="0" />
      <LineId Id="228" Count="0" />
      <LineId Id="128" Count="1" />
      <LineId Id="112" Count="0" />
      <LineId Id="151" Count="0" />
      <LineId Id="113" Count="5" />
      <LineId Id="167" Count="3" />
      <LineId Id="173" Count="2" />
      <LineId Id="91" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>