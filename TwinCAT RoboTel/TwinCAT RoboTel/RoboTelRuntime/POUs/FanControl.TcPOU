<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.9">
  <POU Name="FanControl" Id="{aa14e62d-ea4c-4f88-afe0-bf32efd9c378}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM FanControl
VAR_INPUT
	// enable the fan controller
	enable: BOOL := TRUE;	
	// reset the fan controller
	reset :	BOOL;
END_VAR
VAR_OUTPUT
	// error condition
	error: BOOL;	
END_VAR
VAR
	// fan axis reference
	Fan_axis:		MDP5001_511_733_32199BA1;
	// measured temperature
	temperature:	REAL;
	// calculated velocity
	velocity:		INT;
	velocity_percentage:	REAL;
	lrVelocity:		LREAL;
	// issue temperature warning
	TemperatureWarning: FB_EventLog;
	MQTTTimer:		TON := (PT:=T#5S);
	sPayloadPub: STRING(255) := '';
	softreset:		BOOL;
END_VAR

]]></Declaration>
    <Implementation>
      <ST><![CDATA[(* Upper telescope cabinet fan control *)

// enable the fan as soon as main cabinet is ready AND temperature exceeds ambient temperature
Fan_axis.MDP5001_511_733_Output.MDP5001_733_Control_1.Enable := Transformer.power_OK AND NOT Reset AND (temperature > Environment.TemperatureDome);
// reset on MAIN reset
Fan_axis.MDP5001_511_733_Output.MDP5001_733_Control_1.Reset := reset OR softreset;
// calculate the temperatur from analog input
temperature := GVL_Telescope.temperature_cabinet / 100.0;

// set the fan velocity as a function of temperature difference
lrvelocity:= F_YREAL(temperature - Environment.TemperatureDome, 1.0, 2.0, 0, 32767) ;
velocity := LREAL_TO_INT(lrvelocity);

velocity_percentage := 100.0*INT_TO_REAL(velocity)/32767.0;
// apply the calculated velocity
Fan_axis.MDP5001_511_733_Output.MDP5001_733_Velocity := velocity;
// return the error condition
error := Fan_axis.MDP5001_511_733_Input.MDP5001_733_Status_1.Error;

MQTTTimer(IN:=TRUE);
IF MQTTTimer.Q THEN // publish new payload every second
	MQTTTimer(IN:=FALSE);
	sPayloadPub := 'electronics,location=dome,host=CX-4E6032,module=TelescopeCabinet ';
	MAIN.MQTTClient.Publish('electronics', 'dome', 'TelescopeCabinetTemperature', LREAL_TO_FMTSTR(Temperature, 2, TRUE));
	MAIN.MQTTClient.Publish('electronics', 'dome', 'FanVelocity', LREAL_TO_FMTSTR(velocity_percentage, 1, TRUE));
END_IF

TemperatureWarning(Trigger := temperature >= 40.0,
				Level := ADSLOG_MSGTYPE_WARN,
				FormatString := '%s',
				OnMessage := 'Telescope cabinet temperature exceeds 40 degrees Celsius');
]]></ST>
    </Implementation>
    <LineIds Name="FanControl">
      <LineId Id="52" Count="0" />
      <LineId Id="87" Count="0" />
      <LineId Id="55" Count="0" />
      <LineId Id="10" Count="0" />
      <LineId Id="56" Count="0" />
      <LineId Id="11" Count="0" />
      <LineId Id="57" Count="0" />
      <LineId Id="32" Count="0" />
      <LineId Id="239" Count="0" />
      <LineId Id="247" Count="0" />
      <LineId Id="275" Count="0" />
      <LineId Id="244" Count="0" />
      <LineId Id="238" Count="0" />
      <LineId Id="196" Count="0" />
      <LineId Id="59" Count="0" />
      <LineId Id="18" Count="0" />
      <LineId Id="60" Count="0" />
      <LineId Id="19" Count="0" />
      <LineId Id="112" Count="0" />
      <LineId Id="114" Count="0" />
      <LineId Id="146" Count="1" />
      <LineId Id="198" Count="1" />
      <LineId Id="201" Count="0" />
      <LineId Id="113" Count="0" />
      <LineId Id="46" Count="3" />
      <LineId Id="45" Count="0" />
      <LineId Id="5" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>