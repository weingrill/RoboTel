<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.9">
  <POU Name="FanControl" Id="{aa14e62d-ea4c-4f88-afe0-bf32efd9c378}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM FanControl
VAR_INPUT
	// enable the fan controller
	enable: BOOL := TRUE;	
	// reset the fan controller
	reset :	BOOL;
END_VAR
VAR_OUTPUT
	// error condition
	error: BOOL;	
END_VAR
VAR
	// fan axis reference
	Fan_axis:	MDP5001_511_733_32199BA1;
	// measured temperature
	temperature : REAL;
	// calculated velocity
	velocity: INT;
	// issue temperature warning
	TemperatureWarning: FB_EventLog;
	BasicPID: FB_BasicPID;
	MQTTTimer : TON := (PT:=T#5S);
END_VAR

]]></Declaration>
    <Implementation>
      <ST><![CDATA[(* Upper telescope cabinet fan control *)

// FIXME: fan does not restart after poweron-reset

// enable the fan as soon as main cabinet is ready AND temperature exceeds 25°C
Fan_axis.MDP5001_511_733_Output.MDP5001_733_Control_1.Enable := MAIN.power_OK AND temperature >= 25.0 AND NOT Reset;
// reset on MAIN reset
Fan_axis.MDP5001_511_733_Output.MDP5001_733_Control_1.Reset := reset;
// calculate the temperatur efrom analog input
temperature := GVL_Telescope.temperature_cabinet / 100.0;
// set the fan velocity as a function of temperature
//velocity := LREAL_TO_INT(F_YREAL(temperature, 25.0, 40.0, 1000, 32767));
BasicPID(fSetpointValue := Environment.TemperatureDome + 1.0,
			fActualValue := temperature,
			bReset := reset,
			fCtrlCycleTime := 0.002,
			fKp := 100.0,
			fTn := 1.0,
			fTv := 1.0,
			fTd := 1.0
			);
velocity := LIMIT(0, LREAL_TO_INT(-1.0*BasicPID.fCtrlOutput), 32767);
// apply the calculated velocity
Fan_axis.MDP5001_511_733_Output.MDP5001_733_Velocity := velocity;
// return the error condition
error := Fan_axis.MDP5001_511_733_Input.MDP5001_733_Status_1.Error;

MQTTTimer(IN:=TRUE);
IF MQTTTimer.Q THEN // publish new payload every second
	MQTTTimer(IN:=FALSE);
	MAIN.MQTTPublisher(
		Topic := 'RoboTel/Electricity', 
		Message := 'Telescope Cabinet Temperature', 
		Value := LREAL_TO_FMTSTR(temperature, 2, TRUE));
END_IF

TemperatureWarning(Trigger := temperature >= 40.0,
				Level := ADSLOG_MSGTYPE_WARN,
				FormatString := '%s',
				OnMessage := 'Telescope cabinet temperature exceeds 40 degrees Celsius');
]]></ST>
    </Implementation>
    <LineIds Name="FanControl">
      <LineId Id="52" Count="0" />
      <LineId Id="87" Count="1" />
      <LineId Id="61" Count="0" />
      <LineId Id="55" Count="0" />
      <LineId Id="10" Count="0" />
      <LineId Id="56" Count="0" />
      <LineId Id="11" Count="0" />
      <LineId Id="57" Count="0" />
      <LineId Id="32" Count="0" />
      <LineId Id="58" Count="0" />
      <LineId Id="31" Count="0" />
      <LineId Id="154" Count="0" />
      <LineId Id="156" Count="1" />
      <LineId Id="161" Count="0" />
      <LineId Id="158" Count="0" />
      <LineId Id="163" Count="2" />
      <LineId Id="155" Count="0" />
      <LineId Id="153" Count="0" />
      <LineId Id="59" Count="0" />
      <LineId Id="18" Count="0" />
      <LineId Id="60" Count="0" />
      <LineId Id="19" Count="0" />
      <LineId Id="112" Count="0" />
      <LineId Id="114" Count="0" />
      <LineId Id="146" Count="5" />
      <LineId Id="113" Count="0" />
      <LineId Id="46" Count="3" />
      <LineId Id="45" Count="0" />
      <LineId Id="5" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>