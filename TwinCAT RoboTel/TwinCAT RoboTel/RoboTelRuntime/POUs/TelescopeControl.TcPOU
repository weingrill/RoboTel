<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.0">
  <POU Name="TelescopeControl" Id="{6a4f2e3a-c9ee-4352-b4f6-4f9d94b2c472}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM TelescopeControl
VAR
	// manual or automatic operation of the telescope
	telescope_mode : E_TelescopeMode;	
	// actual command from the TCS
	TCS_command: 	E_TCSCommand;
	// current Julian Date calculated from system time
	jd,
	// altitude of the telescope pointing 
	altitude,
	// azimut of the telescope pointing 
	azimut,
	// local siderial time calculated from Julian date
	lst,
	// values calulated when ra and dec are set by TCS
	altitude_calc, azimuth_calc: LREAL;
	
	(* Declination section *)
	fbDeclinationAxis:		FB_Axis;
	fbDeclinationAxisJog:	FB_AxisJog;
	// absolute encoder value of the declination axis
	Declination_absolute: LREAL;
	// encoder value of the declination axis derived from absolute encoder in [-90 ... 0 ... +90]
	Declination_real: LREAL;
	// encoder value from the motor
	Declination_current: LREAL;
	// difference between motor encoder and absolute encoder
	Declination_lag: LREAL;
	// true, if declination lag exceeds error boundaries
	Declination_lagerror: BOOL;
	// current set coordinates
	Declination_set: LREAL := -720.0;
	// current velocity
	Declination_velocity: LREAL := 0.0;
	// True if Move has been executed
	DeclinationDone: BOOL;
	//Declination_execute: RS;
	// True if motor controller reports an arror
	DeclinationAxisError, 
	// true if axis has been calibrated
	DeclinationCalibrated: BOOL;
	// true if axis is moving
	DeclinationBusy: BOOL;
	// True if calibration has been aborted
	DeclinationAborted: BOOL;
	// true if general error in the axis control occured
	DeclinationError: BOOL;
	// error id from axis controller
	DeclinationErrorID: UDINT;
	
	(* Richt Ascension section *)
	Rightascension_set,
	Rightascension_current: LREAL;
	
	(* Hour Angle part *)
	fbHourAxis : FB_Axis;
	fbHourAxisJog 	: FB_AxisJog;
	Hourangle_absolute,
	Hourangle_real,
	Hourangle_current,
	Hourangle_calc,
	Hourangle_lag: LREAL;
	Hourangle_lagerror: BOOL;
	Hourangle_set: LREAL := -720.0;
	Hourangle_velocity : LREAL := 0.0;
	Hourangle_execute: RS;
	HourangleAxisError, 
	HourangleCalibrated: BOOL;
	HourangleDone: BOOL;
	HourangleBusy: BOOL;
	HourangleActive: BOOL;
	HourangleAborted: BOOL;
	HourangleError: BOOL;
	HourangleErrorID: UDINT;
	
	fbTime: FB_LocalSystemTime := ( bEnable := TRUE, dwCycle := 1);
	SUNPOS:	FB_SUNPOS;
	eq2hor:	FB_EQ2HOR;
	eq2hor2:	FB_EQ2HOR2;
	hadec2altaz:	FB_HADEC2ALTAZ;
	
	AxDecMcHome:	MC_Home; // FIXME MC_Home does not serve the Done and Busy signals!
	AxHourMcHome:	MC_Home;
	
	HomeTrigger: 	R_TRIG;
	
	poweron_delay: 	TON;
	homing_pulse:	TP;
	//tracking_delay: TON;
	
(*	calibration_offset,
	calibration_factor : LREAL;
*)	
	east_of_pier,
	west_of_pier:	BOOL;
	reset,
	softreset:	BOOL;
	calibrate,
	softcalibrate:	BOOL;
(*
TCS interface section
see https://gitlab.aip.de/bmk10k/telescope_firmware/snippets/5
*)
	
	// boolean, true: Power on, false: power off
	power: BOOL;
	// boolean, true: go to home position, unset track/goto if active
	gohome: BOOL;
	// boolean, true: go into park position, ready to stow telescope, unset track/goto
	park: BOOL;
	// apparent right ascension, degrees, double
	ra:	LREAL := -1.0;	
	// apparent declination, degrees, double
	de: LREAL := 0.0;
	// boolean, TRUE: MOVE telescope TO last ra/de AND start tracking. Set 'goto' TO FALSE, IF TRUE. FALSE: Stop tracking as soon as possible
	track: BOOL;
	// apparent hour anlge, degrees, double, south=zero, west>0)
	tau: LREAL := 0.0;
	// boolean, TRUE: MOVE telescope TO tau/de AND stop there. Set track TO FALSE, IF TRUE. FALSE: no effect.)
	goto: BOOL;	
	// boolean, TRUE: Stop motion OF telescope immediately, set goto AND track TO FALSE. FALSE: Allow motion OF telescope again via track/goto).
	stop: BOOL;	
	//boolean, TRUE: Swap telescope TO observe eastern hemisphere. Set TO FALSE once there. IF already there, set TO FALSE immediately.FALSE: no effect)
	east: BOOL;
	//(boolean, TRUE: Swap telescope TO observe western hemisphere. Set TO FALSE once there. IF already there, set TO FALSE immediately.FALSE: no effect)
	west: BOOL;	
	// internal command: telescope is moved to pumping position
	pumping: BOOL;
	//	offset TO current tracking point on axis tau, degrees, double
	tauoffset: LREAL;
	// 	offset TO current tracking point on axis dec, degrees, double 
	deoffset: LREAL;

	
	
	//TelescopeControlEvent,
	CalibrationEvent,
	DeclinationCalEvent,
	DeclinationErrorEvent,
	DeclinationLagEvent,
	DeclinationAxisEvent,
	HourangleCalEvent,
	HourangleErrorEvent,
	HourangleLagEvent,
	HourangleAxisEvent,
	TCSgohomeEvent,
	TCSparkEvent,
	TCSgotoEvent,
	TCStrackEvent,
	TCSstopEvent,
	AltitudeEvent: FB_Eventlog;
END_VAR
VAR_OUTPUT
	//		TRUE, IF telescope can be operated
	ready:	BOOL; 
	//integer, highest error severity currently in effect (0=no error, 1=info,2=warning,4=error,8=panic)
	error:	UDINT;	
	//number OF errors encountered
	errnr:	UINT;	
	//INT[] error numbers as an ARRAY, valid are errnr entries.
	errlist:	ARRAY [0..10] OF UINT;
	//TRUE, IF telescope is in fast-MOVE phase (includes pole-swap)
	sliding: BOOL;	
	//TRUE, IF telescope is on tracking position AND currently tracking.
	tracking: BOOL;	
	//TRUE, IF telescope is AT rest.
	stopped: BOOL;	
	// Current tau/dec. in degrees.
	decurrent, taucurrent: LREAL; 
	// (all degrees, azimuth 0=S, W>0)
	racurrent,azcurrent,altcurrent: LREAL; 
	//	(time in sec. to reach the goto/track position)
	slewtime: LREAL; 
	// 	(TIME in sec. available UNTIL pole-swap necessary).
	tracktime: LREAL;	
	// True: telescope is calibrated
	homed: BOOL;
END_VAR
VAR CONSTANT
(* Potsdam:
	longitude: LREAL := 13.104589;
	latitude: LREAL := 52.404977;
*)
(* Chile site : *)
	// telescope site longitude, source: Google 
	longitude: LREAL := -70.201280;
	// telescope site latitude, source: Google
	latitude: LREAL := -24.598464;
	// telescope site height above sea level: source Wikipedia Cerro Armazones Observatory
	height: LREAL := 2810.0;
	siderial_velocity: LREAL := 360.0 / 86164.099;
	position_velocity: LREAL := 1.0;
	declination_park: LREAL := 294.0;
	hourangle_park: LREAL := 359.5;

	declination_home: LREAL := 270.0;
	hourangle_home: LREAL := 270.0;
	
	lag_error : LREAL := 0.5;
	position_error : LREAL := 10.0/3600.0;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[// get the system time
fbTime();
IF fbTime.bValid THEN
	jd := DateTime2JD(fbTime.systemTime);
END_IF
lst := CT2LST(longitude, jd);
// set reset state either by hardware (key pressed) or by software (set by e.g. tcs)
reset := softreset OR GVL_Main.reset_switch;
IF softreset THEN
	// unset the softreset, after reset has been set
	softreset := FALSE;
END_IF

// determine the operation of the telescope based on the switch set
IF GVL_pendant_control.key_switch THEN
	telescope_mode := E_TelescopeMode.manual;
ELSE
	telescope_mode := E_TelescopeMode.automatic;
END_IF

eq2hor2(alpha := ra,
	delta := de,
	lon := longitude,
	lat := latitude,
	JD := jd,
	alt => altitude_calc,
	az => azimuth_calc,
	ha => hourangle_calc);
							
// set TCS_command according to state variables ordered by precedence
IF track THEN
	TCS_command := E_TCSCommand.track;
ELSIF goto THEN
	TCS_command := E_TCSCommand.goto;
ELSIF gohome THEN
	TCS_command := E_TCSCommand.gohome;
ELSIF park THEN
	TCS_command := E_TCSCommand.park;
ELSIF east THEN
	TCS_command := E_TCSCommand.east;
ELSIF west THEN
	TCS_command := E_TCSCommand.west;
ELSIF pumping THEN
	TCS_command := E_TCSCommand.pumping;
ELSIF stop THEN
	TCS_command := E_TCSCommand.stop;
ELSE
	TCS_command := E_TCSCommand.no_command;
END_IF

TCSgohomeEvent(	Trigger := gohome, 
				Level := ADSLOG_MSGTYPE_HINT,
				FormatString := 'GOHOME %s',
				OnMessage := 'commencing',
				OffMEssage := 'completed');
TCSparkEvent(	Trigger := park, 
				Level := ADSLOG_MSGTYPE_HINT,
				FormatString := 'PARK %s',
				OnMessage := 'commencing',
				OffMEssage := 'completed');
TCSgotoEvent(	Trigger := goto, 
				Level := ADSLOG_MSGTYPE_HINT,
				FormatString := 'GOTO %s',
				OnMessage := 'commencing',
				OffMEssage := 'completed');
TCStrackEvent(	Trigger := track, 
				Level := ADSLOG_MSGTYPE_HINT,
				FormatString := 'TRACK %s',
				OnMessage := 'commencing',
				OffMEssage := 'completed');
TCSstopEvent(	Trigger := stop, 
				Level := ADSLOG_MSGTYPE_WARN,
				FormatString := 'STOP %s',
				OnMessage := 'commencing',
				OffMEssage := 'completed',
				OffLevel := ADSLOG_MSGTYPE_HINT);
TCSstopEvent(	Trigger := stop, 
				Level := ADSLOG_MSGTYPE_WARN,
				FormatString := 'STOP %s',
				OnMessage := 'commencing',
				OffMEssage := 'completed',
				OffLevel := ADSLOG_MSGTYPE_HINT);
AltitudeEvent(	Trigger := altitude_calc<0.0, 
				Level := ADSLOG_MSGTYPE_WARN,
				FormatString := '%s',
				OnMessage := 'Target below horizon',
				OffMEssage := '');
GVL_Main.lamp_error :=	DeclinationError OR HourangleError OR 
								Declination_lagerror OR Hourangle_lagerror OR 
								DeclinationAxisError OR HourangleAxisError;]]></ST>
    </Implementation>
    <LineIds Name="TelescopeControl">
      <LineId Id="58" Count="1" />
      <LineId Id="353" Count="0" />
      <LineId Id="60" Count="0" />
      <LineId Id="354" Count="0" />
      <LineId Id="65" Count="0" />
      <LineId Id="628" Count="1" />
      <LineId Id="643" Count="0" />
      <LineId Id="646" Count="0" />
      <LineId Id="644" Count="1" />
      <LineId Id="1116" Count="0" />
      <LineId Id="647" Count="0" />
      <LineId Id="635" Count="1" />
      <LineId Id="640" Count="0" />
      <LineId Id="3084" Count="0" />
      <LineId Id="637" Count="0" />
      <LineId Id="1794" Count="0" />
      <LineId Id="1282" Count="0" />
      <LineId Id="1795" Count="3" />
      <LineId Id="2008" Count="3" />
      <LineId Id="1499" Count="0" />
      <LineId Id="1501" Count="0" />
      <LineId Id="1527" Count="2" />
      <LineId Id="1513" Count="0" />
      <LineId Id="1526" Count="0" />
      <LineId Id="1547" Count="1" />
      <LineId Id="1520" Count="3" />
      <LineId Id="2867" Count="1" />
      <LineId Id="1524" Count="1" />
      <LineId Id="1511" Count="0" />
      <LineId Id="1519" Count="0" />
      <LineId Id="1509" Count="0" />
      <LineId Id="3085" Count="0" />
      <LineId Id="931" Count="1" />
      <LineId Id="1179" Count="0" />
      <LineId Id="933" Count="3" />
      <LineId Id="1180" Count="0" />
      <LineId Id="937" Count="0" />
      <LineId Id="1183" Count="0" />
      <LineId Id="939" Count="1" />
      <LineId Id="1181" Count="0" />
      <LineId Id="941" Count="0" />
      <LineId Id="1184" Count="0" />
      <LineId Id="943" Count="1" />
      <LineId Id="1182" Count="0" />
      <LineId Id="945" Count="0" />
      <LineId Id="1185" Count="0" />
      <LineId Id="947" Count="2" />
      <LineId Id="1187" Count="0" />
      <LineId Id="1186" Count="0" />
      <LineId Id="1209" Count="0" />
      <LineId Id="1485" Count="10" />
      <LineId Id="5" Count="0" />
      <LineId Id="1279" Count="1" />
    </LineIds>
  </POU>
</TcPlcObject>