<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.6">
  <POU Name="TelescopeControl" Id="{6a4f2e3a-c9ee-4352-b4f6-4f9d94b2c472}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM TelescopeControl
VAR_INPUT
(*
TCS interface section
see https://gitlab.aip.de/bmk10k/telescope_firmware/snippets/5
*)
	
	// boolean, true: Power on, false: power off
	power: BOOL;
	// boolean, true: go to home position, unset track/goto if active
	gohome: BOOL;
	// boolean, true: go into park position, ready to stow telescope, unset track/goto
	park: BOOL;
	// apparent right ascension, degrees, double
	ra:	LREAL := 165.92917;	
	// apparent declination, degrees, double
	de: LREAL := 61.75083;
	// boolean, TRUE: MOVE telescope TO last ra/de AND start tracking. Set 'goto' TO FALSE, IF TRUE. FALSE: Stop tracking as soon as possible
	track: BOOL;
	// apparent hour anlge, degrees, double, south=zero, west>0)
	tau: LREAL := 0.0;
	// boolean, TRUE: MOVE telescope TO tau/de AND stop there. Set track TO FALSE, IF TRUE. FALSE: no effect.)
	goto: BOOL;	
	// boolean, TRUE: Stop motion OF telescope immediately, set goto AND track TO FALSE. FALSE: Allow motion OF telescope again via track/goto).
	stop: BOOL;	
	// internal command: telescope is moved to pumping position
	pumping: BOOL;
	//	offset TO current tracking point on axis tau, degrees, double
	tauoffset: LREAL;
	// 	offset TO current tracking point on axis dec, degrees, double 
	deoffset: LREAL;
	// initiates hard-reset on all axis
	reset:		BOOL;

END_VAR
VAR
	// manual or automatic operation of the telescope
	telescope_mode : E_TelescopeMode;	
	// actual command from the TCS
	TCS_command: 	E_TCSCommand;
	// current Julian Date calculated from system time
	jd,
	// desired elevation of the telescope pointing 
	elevation,
	// desired azimut of the telescope pointing 
	azimuth,
	// local siderial time calculated from Julian date
	lst,
	// values calulated when ra and dec are set by TCS
	elevation_calc, 
	azimuth_calc,
	elevation_current,
	azimuth_current,
	rightascension_calc,
	declination_calc: LREAL;
	
	(* Hour Angle part *)
	Hourangle_calc: LREAL;
	
	fbTime: FB_AstroClock;
	
	eq2hor2:	FB_EQ2HOR2;
	hor2eq:		FB_HOR2EQ;
	
	// initiates hard-reset on all axis
	softreset:		BOOL;
	// triggers power-failure event
	powerfailure: 	BOOL;
	poweron:		R_TRIG;
	poweroff:		F_TRIG;
	poweronwarning:	TP;
	
	CalibrationEvent,
	DeclinationCalEvent,
	DeclinationErrorEvent,
	DeclinationLagEvent,
	DeclinationAxisEvent,
	HourangleCalEvent,
	HourangleErrorEvent,
	HourangleLagEvent,
	HourangleAxisEvent,
	TCSpowerEvent,
	TCSgohomeEvent,
	TCSparkEvent,
	TCSgotoEvent,
	TCStrackEvent,
	TCSstopEvent,
	AltitudeEvent: FB_Eventlog;
	SimpleLog:	FB_SimpleLog;
END_VAR
VAR_OUTPUT
	//		TRUE, IF telescope can be operated
	ready:	BOOL; 
	//integer, highest error severity currently in effect (0=no error, 1=info,2=warning,4=error,8=panic)
	error:	UDINT;	
	//number OF errors encountered
	errnr:	UINT;	
	//INT[] error numbers as an ARRAY, valid are errnr entries.
	errlist:	ARRAY [0..10] OF UINT;
	//TRUE, IF telescope is in fast-MOVE phase (includes pole-swap)
	sliding: BOOL;	
	//TRUE, IF telescope is on tracking position AND currently tracking.
	tracking: BOOL;	
	//TRUE, IF telescope is AT rest.
	stopped: BOOL;	
	// Current tau/dec. in degrees.
	decurrent, taucurrent: LREAL; 
	// (all degrees, azimuth 0=S, W>0)
	racurrent,azcurrent,altcurrent: LREAL; 
	//	(time in sec. to reach the goto/track position)
	slewtime: LREAL; 
	// 	(TIME in sec. available UNTIL pole-swap necessary).
	tracktime: LREAL;	
	// True: telescope is calibrated
	homed: BOOL;
END_VAR
VAR CONSTANT
(* Potsdam:
	longitude: LREAL := 13.104589;
	latitude: LREAL := 52.404977;
*)
(* RoboTel site : *)
	// telescope site longitude, source: Google 
	longitude: LREAL := 13.101867;
	// telescope site latitude, source: Google
	latitude: LREAL := 52.404940;
	// telescope site height above sea level: estimated
	altitude: LREAL := 33.0;
	siderial_velocity: LREAL := 360.0 / 86164.099;
	position_velocity: LREAL := 1.0;
	elevation_park: LREAL := 80.0;
	azimuth_park: LREAL := 190.0;

	elevation_home: LREAL := 45.0;
	azimuth_home: LREAL := 180.0;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[// get the system time
fbTime();
jd := DateTime2JD(fbTime.time_RTCEX2);
lst := CT2LST(longitude, jd);
// set reset state either by hardware (key pressed) or by software (set by e.g. tcs)
reset := softreset OR GVL_Main.reset_switch;
IF softreset THEN
	// unset the softreset, after reset has been set
	softreset := FALSE;
END_IF

IF reset THEN
	ElevationControl.reset := TRUE;
	AzimuthElevationControl.Reset := TRUE;
	// TODO more axis to follow
END_IF

IF MAIN.error THEN
	power := FALSE;
END_IF

// determine the operation of the telescope based on the switch set
IF GVL_pendant_control.key_switch THEN
	telescope_mode := E_TelescopeMode.manual;
ELSE
	telescope_mode := E_TelescopeMode.automatic;
END_IF

eq2hor2(alpha := ra,
	delta := de,
	lon := longitude,
	lat := latitude,
	JD := jd + tauoffset,
	alt => elevation_calc,
	az => azimuth_calc,
	ha => hourangle_calc);

azimuth_current := AzimuthElevationControl.act_position;
elevation_current := ElevationControl.act_position;

hor2eq(alt := elevation, 
		az := azimuth,
		jd := jd,
		lat := latitude,
		lon := longitude,
		altitude := altitude,
		ra => rightascension_calc,
		dec => declination_calc);		

poweronwarning(IN := power, PT := T#250MS, Q => GVL_Telescope.horn);
poweroff(CLK := power);


IF power THEN
	IF NOT Main.brake_clearing THEN
		powerfailure := TRUE;
		TCSpowerEvent.OnMessage := 'failure: brake clearing not set';
		power := FALSE;
	ELSIF PendantControl.manual THEN
		powerfailure := TRUE;
		TCSpowerEvent.OnMessage := 'failure: manual override';
		power := FALSE;
	ELSIF NOT Main.power_OK THEN
		powerfailure := TRUE;
		TCSpowerEvent.OnMessage := 'failure: main power failure';
		power := FALSE;
	ELSIF NOT Main.phase_available THEN
		powerfailure := TRUE;
		TCSpowerEvent.OnMessage := 'failure: hydraulics power failure';
		power := FALSE;
	ELSE
		powerfailure := FALSE;		
	END_IF
	// enable hydraulics
	HydraulicsControl.start := TRUE;
	// open cover
	//Covercontrol.open := TRUE;
	// enable elevation
	IF MAIN.ready THEN
		ElevationControl.enable := TRUE;
	END_IF
	IF ElevationControl.Ready AND NOT ElevationControl.Calibrated THEN
		ElevationControl.HomeAxis := TRUE;
	END_IF
	// enable azimuth
	IF ElevationControl.Ready THEN
		AzimuthElevationControl.enable := TRUE;
	END_IF
	IF AzimuthElevationControl.ready AND NOT AzimuthElevationControl.calibrated THEN
		AzimuthElevationControl.HomeAxis := TRUE;
	END_IF

	// enable derotator
	//DerotatorControl.enable := TRUE;
	// enable filterwheel
	//FilterWheelControl.Enable := TRUE;
	// enable focus
	//FocusControl.enable := TRUE;
ELSIF poweroff.Q THEN
	gohome := FALSE;
	park  := FALSE;
	track := FALSE;
	goto := FALSE;
	// disable azimuth
	AzimuthElevationControl.enable := FALSE;
	// disbale elevation (closes brake)
	ElevationControl.enable := FALSE;
	// disable focus
	FocusControl.enable := FALSE;
	// disable filterwheel
	FilterWheelControl.Enable := FALSE;
	// disable derotator
	DerotatorControl.enable := FALSE;
	// close cover
	CoverControl.close := TRUE;
	// disable hydraulics
	HydraulicsControl.close_brake := TRUE;
	HydraulicsControl.stop := TRUE;
	SimpleLog(Message := 'shutdown');
END_IF

		
// set TCS_command according to state variables ordered by precedence
IF track THEN
	TCS_command := E_TCSCommand.track;
	goto := FALSE;
ELSIF goto THEN
	TCS_command := E_TCSCommand.goto;
	track := FALSE;
ELSIF gohome THEN
	TCS_command := E_TCSCommand.gohome;
	goto := FALSE;
	track := FALSE;
ELSIF park THEN
	TCS_command := E_TCSCommand.park;
	goto := FALSE;
	track := FALSE;
ELSIF pumping THEN
	TCS_command := E_TCSCommand.pumping;
ELSIF stop THEN
	TCS_command := E_TCSCommand.stop;
	goto := FALSE;
	track := FALSE;
	gohome := FALSE;
	park := FALSE;
ELSE
	TCS_command := E_TCSCommand.no_command;
	ElevationControl.MoveAxis := FALSE;
	AzimuthElevationControl.MoveAxis := FALSE;
END_IF

IF NOT track THEN
	ElevationControl.Tracking := FALSE;
	AzimuthElevationControl.Tracking := FALSE;
END_IF

IF TCS_command = E_TCSCommand.park THEN
	ElevationControl.position := elevation_park;
	AzimuthElevationControl.position := azimuth_park;
	ElevationControl.MoveAxis := TRUE;
	AzimuthElevationControl.MoveAxis := TRUE;
	IF ElevationControl.ElevationAxis.MoveDone AND AzimuthElevationControl.AzimuthAxis.MoveDone THEN
		park := FALSE;
	END_IF

ELSIF TCS_command = E_TCSCommand.gohome THEN
	ElevationControl.position := elevation_home;
	ElevationControl.MoveAxis := TRUE;
	AzimuthElevationControl.position := azimuth_home;
	AzimuthElevationControl.MoveAxis := TRUE;
	IF ElevationControl.ElevationAxis.MoveDone AND AzimuthElevationControl.AzimuthAxis.MoveDone THEN
		gohome := FALSE;
	END_IF
	
ELSIF TCS_command = E_TCSCommand.track THEN
	ElevationControl.position := elevation_calc;
	ElevationControl.Tracking := TRUE;
	AzimuthElevationControl.position := azimuth_calc;
	AzimuthElevationControl.Tracking := TRUE;
	
ELSIF TCS_command = E_TCSCommand.goto THEN
	ElevationControl.position := elevation_calc;
	ElevationControl.MoveAxis := TRUE;
	AzimuthElevationControl.position := azimuth_calc;
	AzimuthElevationControl.MoveAxis := TRUE;

	IF ElevationControl.ElevationAxis.MoveDone AND AzimuthElevationControl.AzimuthAxis.MoveDone THEN
		ElevationControl.MoveAxis := FALSE;
		AzimuthElevationControl.MoveAxis := FALSE;
		goto := FALSE;
	END_IF
END_IF
 
sliding := ElevationControl.MoveAxis OR AzimuthElevationControl.MoveAxis;
tracking := ElevationControl.Tracking AND AzimuthElevationControl.Tracking;
stopped :=  ElevationControl.ElevationAxis.StandStill AND AzimuthElevationControl.AzimuthAxis.StandStill;
homed := ElevationControl.Calibrated AND AzimuthElevationControl.calibrated;

(* Event function blocks start here. *)
TCSpowerEvent(	Trigger := powerfailure, 
				Level := ADSLOG_MSGTYPE_ERROR,
				FormatString := 'power %s',
				OffMEssage := 'OK');

TCSgohomeEvent(	Trigger := gohome, 
				Level := ADSLOG_MSGTYPE_HINT,
				FormatString := 'GOHOME %s',
				OnMessage := 'commencing',
				OffMEssage := 'completed');
TCSparkEvent(	Trigger := park, 
				Level := ADSLOG_MSGTYPE_HINT,
				FormatString := 'PARK %s',
				OnMessage := 'commencing',
				OffMEssage := 'completed');
TCSgotoEvent(	Trigger := goto, 
				Level := ADSLOG_MSGTYPE_HINT,
				FormatString := 'GOTO %s',
				OnMessage := 'commencing',
				OffMEssage := 'completed');
TCStrackEvent(	Trigger := track, 
				Level := ADSLOG_MSGTYPE_HINT,
				FormatString := 'TRACK %s',
				OnMessage := 'commencing',
				OffMEssage := 'completed');
TCSstopEvent(	Trigger := stop, 
				Level := ADSLOG_MSGTYPE_WARN,
				FormatString := 'STOP %s',
				OnMessage := 'commencing',
				OffMEssage := 'completed',
				OffLevel := ADSLOG_MSGTYPE_HINT);
AltitudeEvent(	Trigger := power AND elevation_calc<0.0, 
				Level := ADSLOG_MSGTYPE_WARN,
				FormatString := '%s',
				OnMessage := 'Target below horizon',
				OffMEssage := '');
				]]></ST>
    </Implementation>
    <LineIds Name="TelescopeControl">
      <LineId Id="58" Count="0" />
      <LineId Id="3290" Count="1" />
      <LineId Id="65" Count="0" />
      <LineId Id="628" Count="1" />
      <LineId Id="643" Count="0" />
      <LineId Id="646" Count="0" />
      <LineId Id="644" Count="1" />
      <LineId Id="4249" Count="2" />
      <LineId Id="4253" Count="1" />
      <LineId Id="4252" Count="0" />
      <LineId Id="4245" Count="3" />
      <LineId Id="1116" Count="0" />
      <LineId Id="647" Count="0" />
      <LineId Id="635" Count="1" />
      <LineId Id="640" Count="0" />
      <LineId Id="3084" Count="0" />
      <LineId Id="637" Count="0" />
      <LineId Id="1794" Count="0" />
      <LineId Id="1282" Count="0" />
      <LineId Id="1795" Count="3" />
      <LineId Id="2008" Count="2" />
      <LineId Id="3301" Count="2" />
      <LineId Id="3520" Count="0" />
      <LineId Id="2011" Count="0" />
      <LineId Id="3521" Count="4" />
      <LineId Id="3528" Count="1" />
      <LineId Id="4243" Count="0" />
      <LineId Id="4075" Count="1" />
      <LineId Id="4242" Count="0" />
      <LineId Id="3591" Count="0" />
      <LineId Id="3547" Count="0" />
      <LineId Id="3592" Count="0" />
      <LineId Id="3548" Count="0" />
      <LineId Id="3594" Count="0" />
      <LineId Id="3608" Count="0" />
      <LineId Id="3595" Count="0" />
      <LineId Id="3599" Count="1" />
      <LineId Id="3611" Count="0" />
      <LineId Id="3596" Count="0" />
      <LineId Id="3602" Count="1" />
      <LineId Id="3612" Count="0" />
      <LineId Id="3605" Count="2" />
      <LineId Id="3613" Count="0" />
      <LineId Id="3604" Count="0" />
      <LineId Id="3609" Count="0" />
      <LineId Id="3593" Count="0" />
      <LineId Id="3768" Count="0" />
      <LineId Id="3764" Count="0" />
      <LineId Id="3749" Count="0" />
      <LineId Id="3769" Count="0" />
      <LineId Id="3750" Count="0" />
      <LineId Id="3922" Count="0" />
      <LineId Id="3770" Count="0" />
      <LineId Id="3923" Count="3" />
      <LineId Id="3933" Count="0" />
      <LineId Id="3930" Count="2" />
      <LineId Id="4088" Count="2" />
      <LineId Id="4244" Count="0" />
      <LineId Id="3752" Count="0" />
      <LineId Id="3773" Count="0" />
      <LineId Id="3753" Count="0" />
      <LineId Id="3775" Count="0" />
      <LineId Id="3754" Count="0" />
      <LineId Id="3776" Count="0" />
      <LineId Id="3755" Count="0" />
      <LineId Id="4261" Count="3" />
      <LineId Id="3757" Count="0" />
      <LineId Id="3774" Count="0" />
      <LineId Id="3758" Count="0" />
      <LineId Id="3771" Count="0" />
      <LineId Id="3759" Count="0" />
      <LineId Id="3777" Count="0" />
      <LineId Id="3760" Count="0" />
      <LineId Id="3778" Count="0" />
      <LineId Id="3761" Count="0" />
      <LineId Id="3779" Count="0" />
      <LineId Id="3762" Count="0" />
      <LineId Id="3767" Count="0" />
      <LineId Id="3763" Count="0" />
      <LineId Id="3766" Count="0" />
      <LineId Id="3765" Count="0" />
      <LineId Id="4096" Count="0" />
      <LineId Id="3549" Count="0" />
      <LineId Id="3519" Count="0" />
      <LineId Id="3784" Count="0" />
      <LineId Id="1499" Count="0" />
      <LineId Id="1501" Count="0" />
      <LineId Id="1527" Count="0" />
      <LineId Id="4283" Count="0" />
      <LineId Id="1528" Count="1" />
      <LineId Id="4282" Count="0" />
      <LineId Id="1513" Count="0" />
      <LineId Id="1526" Count="0" />
      <LineId Id="4275" Count="1" />
      <LineId Id="1547" Count="1" />
      <LineId Id="4272" Count="1" />
      <LineId Id="2867" Count="1" />
      <LineId Id="1524" Count="1" />
      <LineId Id="4284" Count="3" />
      <LineId Id="1511" Count="0" />
      <LineId Id="1519" Count="0" />
      <LineId Id="4290" Count="1" />
      <LineId Id="1509" Count="0" />
      <LineId Id="4294" Count="0" />
      <LineId Id="3532" Count="0" />
      <LineId Id="4297" Count="1" />
      <LineId Id="4296" Count="0" />
      <LineId Id="4299" Count="0" />
      <LineId Id="3533" Count="1" />
      <LineId Id="3538" Count="0" />
      <LineId Id="4078" Count="0" />
      <LineId Id="4081" Count="0" />
      <LineId Id="4236" Count="2" />
      <LineId Id="4235" Count="0" />
      <LineId Id="3541" Count="0" />
      <LineId Id="3543" Count="0" />
      <LineId Id="4079" Count="0" />
      <LineId Id="3544" Count="0" />
      <LineId Id="4080" Count="0" />
      <LineId Id="4232" Count="2" />
      <LineId Id="4239" Count="0" />
      <LineId Id="3920" Count="1" />
      <LineId Id="3936" Count="0" />
      <LineId Id="4082" Count="0" />
      <LineId Id="4077" Count="0" />
      <LineId Id="4240" Count="0" />
      <LineId Id="3928" Count="1" />
      <LineId Id="3927" Count="0" />
      <LineId Id="4083" Count="1" />
      <LineId Id="4278" Count="0" />
      <LineId Id="4259" Count="0" />
      <LineId Id="4288" Count="1" />
      <LineId Id="4260" Count="0" />
      <LineId Id="4258" Count="0" />
      <LineId Id="3535" Count="0" />
      <LineId Id="3540" Count="0" />
      <LineId Id="3539" Count="0" />
      <LineId Id="4256" Count="0" />
      <LineId Id="4255" Count="0" />
      <LineId Id="4257" Count="0" />
      <LineId Id="3530" Count="1" />
      <LineId Id="3583" Count="3" />
      <LineId Id="3085" Count="0" />
      <LineId Id="931" Count="1" />
      <LineId Id="1179" Count="0" />
      <LineId Id="933" Count="3" />
      <LineId Id="1180" Count="0" />
      <LineId Id="937" Count="0" />
      <LineId Id="1183" Count="0" />
      <LineId Id="939" Count="1" />
      <LineId Id="1181" Count="0" />
      <LineId Id="941" Count="0" />
      <LineId Id="1184" Count="0" />
      <LineId Id="943" Count="1" />
      <LineId Id="1182" Count="0" />
      <LineId Id="945" Count="0" />
      <LineId Id="1185" Count="0" />
      <LineId Id="947" Count="2" />
      <LineId Id="1187" Count="0" />
      <LineId Id="1186" Count="0" />
      <LineId Id="1209" Count="0" />
      <LineId Id="1491" Count="4" />
      <LineId Id="3293" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>