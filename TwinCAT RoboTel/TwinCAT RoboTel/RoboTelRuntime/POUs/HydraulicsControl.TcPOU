<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.0">
  <POU Name="HydraulicsControl" Id="{6bf4055d-2300-4039-bb16-5b9f94622e06}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM HydraulicsControl
VAR
	pressure_watchdog,
	suction_watchdog: TON;
	suction_pump_timer: TP;
	oil_pump_state,
	brake_state: RS;
	// command to open the brake
	open_brake:	BOOL := FALSE;
	// is the brake open?
	brake_open:	BOOL;
	// pump is running, but the pressure remains low
	pressure_failure,
	// suction was started, but it is not running
	suction_failure,
	// oil is low
	oil_low,
	oil_high,
	oil_pressure_OK,
	oil_warning,
	oil_filter_dirty,
	oil_cold,
	oil_hot,
	pump_running,
	suction_running :	BOOL := FALSE;
	brake_open_delay:	TON;
	HydraulicsLog,
	ReserveLog,
	oil_low_log,
	FilterLog,
	OverTemperatureLog,
	UnderTemperatureLog,
	SuctionLog: FB_EventLog;
	
	suction_timer : FB_Timer;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[(* 
Main control Logic for the Hydraulics system
* power on delay for main pump and suction pump
* start main pump if main control is ready (button pressed or remote)
* start suction pump if maximum in pan is reached
* suction pump runs for 60 seconds
* stop main pump if oil is low
* stop main pump if pressure fails for 10 seconds
*)
oil_low := NOT GVL_oil.oil_low;
oil_high := NOT GVL_oil.oil_high;
oil_warning := GVL_oil.oil_reserve;
// Michi Email 22.10.2020 True = OK
oil_pressure_OK := GVL_oil.oil_pressure_OK;
oil_filter_dirty := NOT GVL_oil.oilfilter_dirty;
oil_cold := NOT GVL_oil.oil_undertemperature;
oil_hot := GVL_oil.oil_overtemperature;
pump_running := GVL_oil.pump_running;
suction_running := GVL_oil.suction_running;
			
oil_pump_state(SET := Main.start OR PendantControl.manual_hydraulics_start,
				RESET1 := Main.stop OR PendantControl.manual_hydraulics_stop OR
						pressure_failure OR
						suction_failure OR 
						oil_low OR
						NOT MAIN.phase_available);

GVL_Oil.oil_pump_enable := oil_pump_state.Q1;
open_brake := Main.brake_clearing OR PendantControl.brake_open;
// wait for pressure to build up (hack for oil_pressure_ok)
brake_open_delay(IN := pump_running AND oil_pressure_OK,
				PT := T#3S);
//manually or remotly open brake. Close brake on limit switch. Wait n seconds after pump is on
//hold the brake, if we reach the az-limit	
// close the brake if the pump is not running			
brake_state(SET := brake_open_delay.Q AND open_brake,
			RESET1 := GVL_Telescope.azimut_limit_switch 
					  OR NOT open_brake 
					  OR NOT oil_pump_state.Q1,
			Q1 => GVL_Telescope.brake_azimuth_eve);
// measure suction pump cycle
suction_timer(	bStart := suction_running AND NOT suction_pump_timer.Q, 
				bStop := GVL_oil.oilpan_maximum);  

suction_pump_timer(IN := MAIN.phase_available AND 
						GVL_oil.oilpan_maximum,
					PT := T#28S,
					Q => GVL_Oil.oil_suction_enable);
suction_watchdog(IN := GVL_Oil.oil_suction_enable AND NOT suction_running,
					PT := T#10S,
					Q => suction_failure);
					

pressure_watchdog(IN := GVL_Oil.oil_pump_enable AND 
						NOT oil_pressure_OK,
					PT := T#15S,
				  Q => pressure_failure);
				  				  
HydraulicsLog(Trigger := pressure_failure,
				Level := ADSLOG_MSGTYPE_ERROR,
				FormatString := 'oil pressure: %s',
				OnMessage := 'FAILURE',
				OffMessage := 'OK',
				OffLevel := ADSLOG_MSGTYPE_HINT);
ReserveLog(Trigger := oil_warning,
			Level := ADSLOG_MSGTYPE_WARN,
			FormatString := 'oil reserve: %s',
			OnMessage := 'LOW',
			OffMessage := 'OK',
			OffLevel := ADSLOG_MSGTYPE_HINT);
oil_low_log(Trigger := oil_low,
				Level := ADSLOG_MSGTYPE_ERROR,
				FormatString := 'oil level: %s',
				OnMessage := 'LOW',
				OffMessage := 'OK',
				OffLevel := ADSLOG_MSGTYPE_HINT);
FilterLog(Trigger := oil_filter_dirty,
				Level := ADSLOG_MSGTYPE_WARN,
				FormatString := 'Hydraulics Filter is %s',
				OnMessage := 'dirty',
				OffMessage := 'clean',
				OffLevel := ADSLOG_MSGTYPE_HINT);
OverTemperatureLog(Trigger := oil_hot,
				Level := ADSLOG_MSGTYPE_WARN,
				FormatString := 'Hydraulics Temperature %s',
				OnMessage := '> 50C',
				OffMessage := '< 50C',
				OffLevel := ADSLOG_MSGTYPE_HINT);
UnderTemperatureLog(Trigger := oil_cold,
				Level := ADSLOG_MSGTYPE_WARN,
				FormatString := 'Hydraulics Temperature %s',
				OnMessage := '< 10C',
				OffMessage := '> 10C',
				OffLevel := ADSLOG_MSGTYPE_HINT);
SuctionLog(Trigger := suction_failure,
				Level := ADSLOG_MSGTYPE_ERROR,
				FormatString := 'suction pump: %s',
				OnMessage := 'FAILURE',
				OffMessage := 'OK',
				OffLevel := ADSLOG_MSGTYPE_HINT);]]></ST>
    </Implementation>
    <LineIds Name="HydraulicsControl">
      <LineId Id="308" Count="11" />
      <LineId Id="454" Count="0" />
      <LineId Id="321" Count="5" />
      <LineId Id="333" Count="3" />
      <LineId Id="493" Count="0" />
      <LineId Id="337" Count="9" />
      <LineId Id="416" Count="0" />
      <LineId Id="347" Count="1" />
      <LineId Id="455" Count="1" />
      <LineId Id="349" Count="2" />
      <LineId Id="494" Count="0" />
      <LineId Id="352" Count="14" />
      <LineId Id="369" Count="40" />
      <LineId Id="51" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>