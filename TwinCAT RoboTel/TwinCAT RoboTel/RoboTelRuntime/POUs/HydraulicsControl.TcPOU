<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.0">
  <POU Name="HydraulicsControl" Id="{6bf4055d-2300-4039-bb16-5b9f94622e06}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM HydraulicsControl
VAR
	pressure_watchdog: TON;
	suction_pump_timer: TP;
	oil_pump_state,
	brake_state: RS;
	pressure_failure,
	oil_low,
	oil_high,
	oil_pressure_OK,
	oil_warning,
	oil_filter_dirty,
	oil_cold,
	oil_hot,
	pump_running,
	suction_running :	BOOL := FALSE;
	brake_open_delay :	TON;
	HydraulicsLog,
	ReserveLog,
	oil_low_log,
	FilterLog,
	OverTemperatureLog,
	UnderTemperatureLog: FB_EventLog;
	
	suction_timer : FB_Timer;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[(* 
Main control Logic for the Hydraulics system
* power on delay for main pump and suction pump
* start main pump if main control is ready (button pressed or remote)
* start suction pump if maximum in pan is reached
* suction pump runs for 60 seconds
* stop main pump if oil is low
* stop main pump if pressure fails for 10 seconds
*)
oil_low := NOT GVL_oil.oil_low;
oil_high := NOT GVL_oil.oil_high;
oil_warning := GVL_oil.oil_reserve;
oil_pressure_OK := TRUE OR NOT GVL_oil.oil_pressure_OK;
oil_filter_dirty := NOT GVL_oil.oilfilter_dirty;
oil_cold := NOT GVL_oil.oil_undertemperature;
oil_hot := NOT GVL_oil.oil_overtemperature;

oil_pump_state(SET := GVL_Main.start_switch OR PendantControl.manual_hydraulics_start,
				RESET1 := GVL_Main.stop_switch OR PendantControl.manual_hydraulics_stop OR
						pressure_failure OR 
						oil_low OR
						NOT MAIN.phase_available);

GVL_Oil.oil_pump_enable := oil_pump_state.Q1;

//manually or remotly open brake. Close brake on limit switch. Wait n seconds after pump is on
brake_open_delay(IN := oil_pump_state.Q1 AND (Main.brake_clearing OR PendantControl.brake_open),
				PT := T#4S);
GVL_Telescope.brake_azimuth_eve := brake_open_delay.Q AND NOT GVL_Telescope.azimut_limit_switch;

suction_timer(bStart := NOT suction_pump_timer.Q, bStop := GVL_oil.oilpan_maximum);  

suction_pump_timer(IN := MAIN.phase_available AND 
						GVL_oil.oilpan_maximum,
					PT := T#28S,
					Q => GVL_Oil.oil_suction_enable);

pressure_watchdog(IN := GVL_Oil.oil_pump_enable AND 
						NOT oil_pressure_OK,
					PT := T#10S,
				  Q => pressure_failure);
				  
oil_pressure_ok := oil_pump_state.Q1 AND NOT pressure_failure;
				  
HydraulicsLog(Trigger := pressure_failure,
				Level := ADSLOG_MSGTYPE_ERROR,
				FormatString := 'oil pressure: %s',
				OnMessage := 'FAILURE',
				OffMessage := 'OK',
				OffLevel := ADSLOG_MSGTYPE_HINT);
ReserveLog(Trigger := oil_warning,
			Level := ADSLOG_MSGTYPE_WARN,
			FormatString := 'oil reserve: %s',
			OnMessage := 'LOW',
			OffMessage := 'OK',
			OffLevel := ADSLOG_MSGTYPE_HINT);
oil_low_log(Trigger := oil_low,
				Level := ADSLOG_MSGTYPE_ERROR,
				FormatString := 'oil level: %s',
				OnMessage := 'LOW',
				OffMessage := 'OK',
				OffLevel := ADSLOG_MSGTYPE_HINT);
FilterLog(Trigger := oil_filter_dirty,
				Level := ADSLOG_MSGTYPE_WARN,
				FormatString := 'Hydraulics Filter is %s',
				OnMessage := 'dirty',
				OffMessage := 'clean',
				OffLevel := ADSLOG_MSGTYPE_HINT);
OverTemperatureLog(Trigger := oil_hot,
				Level := ADSLOG_MSGTYPE_WARN,
				FormatString := 'Hydraulics Temperature %s',
				OnMessage := '> 50C',
				OffMessage := '< 50C',
				OffLevel := ADSLOG_MSGTYPE_HINT);
UnderTemperatureLog(Trigger := oil_cold,
				Level := ADSLOG_MSGTYPE_WARN,
				FormatString := 'Hydraulics Temperature %s',
				OnMessage := '< 10C',
				OffMessage := '> 10C',
				OffLevel := ADSLOG_MSGTYPE_HINT);
]]></ST>
    </Implementation>
    <LineIds Name="HydraulicsControl">
      <LineId Id="15" Count="1" />
      <LineId Id="18" Count="2" />
      <LineId Id="37" Count="0" />
      <LineId Id="21" Count="0" />
      <LineId Id="31" Count="0" />
      <LineId Id="17" Count="0" />
      <LineId Id="41" Count="0" />
      <LineId Id="43" Count="0" />
      <LineId Id="42" Count="0" />
      <LineId Id="147" Count="0" />
      <LineId Id="149" Count="0" />
      <LineId Id="152" Count="1" />
      <LineId Id="108" Count="0" />
      <LineId Id="89" Count="0" />
      <LineId Id="109" Count="0" />
      <LineId Id="111" Count="0" />
      <LineId Id="113" Count="0" />
      <LineId Id="112" Count="0" />
      <LineId Id="110" Count="0" />
      <LineId Id="5" Count="0" />
      <LineId Id="177" Count="0" />
      <LineId Id="183" Count="0" />
      <LineId Id="176" Count="0" />
      <LineId Id="180" Count="1" />
      <LineId Id="186" Count="1" />
      <LineId Id="11" Count="0" />
      <LineId Id="35" Count="0" />
      <LineId Id="92" Count="0" />
      <LineId Id="36" Count="0" />
      <LineId Id="44" Count="0" />
      <LineId Id="25" Count="0" />
      <LineId Id="24" Count="0" />
      <LineId Id="27" Count="0" />
      <LineId Id="26" Count="0" />
      <LineId Id="45" Count="0" />
      <LineId Id="130" Count="1" />
      <LineId Id="48" Count="0" />
      <LineId Id="29" Count="0" />
      <LineId Id="49" Count="0" />
      <LineId Id="54" Count="3" />
      <LineId Id="59" Count="5" />
      <LineId Id="66" Count="5" />
      <LineId Id="157" Count="17" />
      <LineId Id="51" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>