<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.0">
  <POU Name="Environment" Id="{03869fa8-1755-402e-a7ee-189c483e0438}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM Environment
VAR
	WindSpeed,
	WindDirection,
	Temperature,
	Humidity,
	Pressure,
	Brightness,
	LightDirection,
	Precipitation,
	TemperatureDome,
	HumidityDome,
	LightDirection:	REAL;
	
	WindEvent,
	HumidityEvent,
	PrecipitationEvent: FB_Eventlog;
	WindAverage,
	PrecipitationAverage,
	HumidityAverage,
	TemperatureAverage: FB_TimeAverage;
	avg_wind, max_wind: REAL;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[(* convert raw Sensor values to real values *)
WindSpeed := 		F_YREAL(GVL_Environment.rawWindSpeed, 		0, 32767,   0.0, 60.0); // m/s
WindDirection :=	F_YREAL(GVL_Environment.rawWindDirection, 	0, 32767,   0.0, 360.0); // °
Temperature :=  	F_YREAL(GVL_Environment.rawTemperature, 	0, 32767, -40.0, 60.0); // °C -40...80?
Humidity :=			F_YREAL(GVL_Environment.rawHumidity, 		0, 32767,   0.0, 100.0); // %
Pressure := 		F_YREAL(GVL_Environment.rawPressure,		0, 32767, 300.0, 800.0); // mBar 300...1100? 800..1060?
Brightness := 		F_YREAL(GVL_Environment.rawBrightness,		0, 32767, 1.0, 150000.0); // Lux
Precipitation :=    F_YREAL(GVL_Environment.rawPrecipation, 	0, 32767,   0.001, 100.0); // mm/h

TemperatureDome :=  F_YREAL(GVL_Environment.rawTemperatureDome, 0, 32767, -30.0, 70.0); // °C
HumidityDome := 	F_YREAL(GVL_Environment.rawHumidityDome, 	0, 32767,   0.0, 100.0); // %

WindAverage(IN := WindSpeed, PT := T#5M, AVG => avg_wind, MAXAVG => max_wind);
PrecipitationAverage(IN := Precipitation, PT := T#2M);
HumidityAverage(IN := Humidity, PT := T#2M);
TemperatureAverage(IN := Temperature, PT := T#5M);

WindEvent(	Trigger := avg_wind > 10.0, 
			Level := ADSLOG_MSGTYPE_WARN,
			FormatString := 'Wind Speed: %s',
			OnMessage := LREAL_TO_STRING(WindSpeed),
			OffMessage := 'OK',
			OffLevel := ADSLOG_MSGTYPE_HINT);

HumidityEvent(	Trigger :=  HumidityAverage.AVG> 80.0, 
				Level := ADSLOG_MSGTYPE_WARN,
				FormatString := 'Humidity: %s',
				OnMessage := LREAL_TO_STRING( HumidityAverage.AVG),
				OffMessage := 'OK',
				OffLevel := ADSLOG_MSGTYPE_HINT);

// TODO: adjust Precipitation level
PrecipitationEvent(	Trigger := PrecipitationAverage.AVG > 0.3, 
					Level := ADSLOG_MSGTYPE_WARN,
					FormatString := 'Precipitation: %s',
					OnMessage := LREAL_TO_STRING( PrecipitationAverage.AVG),
					OffMessage := 'OK',
					OffLevel := ADSLOG_MSGTYPE_HINT);
]]></ST>
    </Implementation>
    <LineIds Name="Environment">
      <LineId Id="3" Count="0" />
      <LineId Id="12" Count="0" />
      <LineId Id="97" Count="0" />
      <LineId Id="13" Count="1" />
      <LineId Id="100" Count="0" />
      <LineId Id="102" Count="0" />
      <LineId Id="99" Count="0" />
      <LineId Id="68" Count="0" />
      <LineId Id="71" Count="1" />
      <LineId Id="230" Count="1" />
      <LineId Id="143" Count="0" />
      <LineId Id="293" Count="0" />
      <LineId Id="297" Count="0" />
      <LineId Id="400" Count="0" />
      <LineId Id="144" Count="12" />
      <LineId Id="462" Count="0" />
      <LineId Id="157" Count="6" />
      <LineId Id="299" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>