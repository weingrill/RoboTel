<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.9">
  <POU Name="Environment" Id="{03869fa8-1755-402e-a7ee-189c483e0438}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM Environment
VAR_OUTPUT
	WindSpeed,
	WindDirection,
	Temperature,
	Humidity,
	Pressure,
	TemperatureDome,
	HumidityDome,
	DewpointDome:	REAL;
	
	Rain:	BOOL;
	WeatherBad:	BOOL;
END_VAR
VAR
	WindEvent,
	HumidityEvent,
	HumidityDomeEvent,
	PrecipitationEvent,
	DewpointEvent: FB_Eventlog;
	WindAverage,
	HumidityAverage,
	HumidityDomeAverage,
	TemperatureAverage: FB_TimeAverage;
	RainDelay:	TON;
	avg_wind, max_wind: REAL;
	MQTTTimer : TON := (PT:=T#1000MS);
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[(* convert raw Sensor values to real values *)
WindSpeed := 		F_YREAL(GVL_Environment.rawWindSpeed, 		0, 32767,   0.0, 50.0); // m/s
WindDirection :=	F_YREAL(GVL_Environment.rawWindDirection, 	0, 32767,   0.0, 360.0); // °
Temperature :=  	F_YREAL(GVL_Environment.rawTemperature, 	0, 32767, -30.0, 70.0); // °C -40...80?
Humidity :=			F_YREAL(GVL_Environment.rawHumidity, 		0, 32767,   0.0, 100.0); // %
Pressure := 		F_YREAL(GVL_Environment.rawPressure,		0, 32767, 800.0, 1060.0); // mBar 600...1060? 800..1060?

HumidityDome :=		F_YREAL(GVL_Environment.rawHumidityDome, 		0, 32767,   0.0, 100.0); // %
TemperatureDome :=  F_YREAL(GVL_Environment.rawTemperatureDome, 	0, 32767, -30.0, 70.0); // °C

DewpointDome := 	F_Dewpoint(HumidityDome, TemperatureDome);

RainDelay(IN := NOT GVL_Environment.rawRain, PT := T#45S, Q => Rain);

WindAverage(IN := WindSpeed, PT := T#3M, AVG => avg_wind, MAXAVG => max_wind);

HumidityAverage(IN := Humidity, PT := T#2M);
TemperatureAverage(IN := Temperature, PT := T#5M);

HumidityDomeAverage(IN := HumidityDome, PT := T#2M);

WeatherBad := Rain OR
				HumidityAverage.AVG >= 80.0 OR
				HumidityDomeAverage.AVG >= 80.0 OR
				WindAverage.AVG > 10.0;

IF WeatherBad AND DomeControl.DomeOpened THEN
	DomeControl.CloseDome := TRUE;
END_IF


MQTTTimer(IN:=TRUE);
IF MQTTTimer.Q THEN // publish new payload every second
	MQTTTimer(IN:=FALSE);
	(*
	FB_MQTTPublisher(
		Topic := 'RoboTel/Environment', 
		Message := 'Temperature', 
		Value := TO_STRING(Temperature))
	*)
END_IF

WindEvent(	Trigger := avg_wind > 10.0, 
			Level := ADSLOG_MSGTYPE_WARN,
			FormatString := 'Wind Speed: %s',
			OnMessage := LREAL_TO_FMTSTR(WindSpeed, 2, TRUE),
			OffMessage := 'OK',
			OffLevel := ADSLOG_MSGTYPE_HINT);

HumidityEvent(	Trigger :=  HumidityAverage.AVG>= 80.0, 
				Level := ADSLOG_MSGTYPE_WARN,
				FormatString := 'Humidity: %s',
				OnMessage := LREAL_TO_FMTSTR( HumidityAverage.AVG, 1, TRUE),
				OffMessage := 'OK',
				OffLevel := ADSLOG_MSGTYPE_HINT);

// azimuth encoder starts to fail at 65% humidity
HumidityDomeEvent(	Trigger :=  HumidityDomeAverage.AVG>= 65.0, 
				Level := ADSLOG_MSGTYPE_WARN,
				FormatString := 'Humidity in Dome: %s',
				OnMessage := LREAL_TO_FMTSTR( HumidityDomeAverage.AVG, 1, TRUE),
				OffMessage := 'OK',
				OffLevel := ADSLOG_MSGTYPE_HINT);

				
PrecipitationEvent(	Trigger := WeatherBad, 
					Level := ADSLOG_MSGTYPE_WARN,
					FormatString := 'Weather: %s',
					OnMessage := 'BAD; closing Dome',
					OffMessage := 'OK',
					OffLevel := ADSLOG_MSGTYPE_HINT);

DewPointEvent( Trigger := TemperatureDome < DewpointDome,
				Level := ADSLOG_MSGTYPE_WARN,
				FormatString := 'Dewpoint in Dome below ambient Temperature: %s',
				OnMessage := LREAL_TO_FMTSTR( DewpointDome, 1, TRUE),
				OffMessage := 'OK',
				OffLevel := ADSLOG_MSGTYPE_HINT);
	]]></ST>
    </Implementation>
    <LineIds Name="Environment">
      <LineId Id="3" Count="0" />
      <LineId Id="12" Count="0" />
      <LineId Id="97" Count="0" />
      <LineId Id="13" Count="1" />
      <LineId Id="100" Count="0" />
      <LineId Id="507" Count="2" />
      <LineId Id="567" Count="0" />
      <LineId Id="506" Count="0" />
      <LineId Id="99" Count="0" />
      <LineId Id="68" Count="0" />
      <LineId Id="230" Count="1" />
      <LineId Id="143" Count="0" />
      <LineId Id="293" Count="0" />
      <LineId Id="297" Count="0" />
      <LineId Id="511" Count="1" />
      <LineId Id="576" Count="8" />
      <LineId Id="622" Count="5" />
      <LineId Id="629" Count="0" />
      <LineId Id="632" Count="0" />
      <LineId Id="631" Count="0" />
      <LineId Id="633" Count="0" />
      <LineId Id="630" Count="0" />
      <LineId Id="628" Count="0" />
      <LineId Id="612" Count="0" />
      <LineId Id="144" Count="12" />
      <LineId Id="544" Count="0" />
      <LineId Id="514" Count="0" />
      <LineId Id="516" Count="5" />
      <LineId Id="462" Count="0" />
      <LineId Id="515" Count="0" />
      <LineId Id="158" Count="5" />
      <LineId Id="569" Count="0" />
      <LineId Id="571" Count="0" />
      <LineId Id="575" Count="0" />
      <LineId Id="572" Count="2" />
      <LineId Id="299" Count="0" />
      <LineId Id="570" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>