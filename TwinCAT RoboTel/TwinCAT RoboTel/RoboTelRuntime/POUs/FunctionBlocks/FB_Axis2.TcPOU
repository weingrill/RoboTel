<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.9">
  <POU Name="FB_Axis2" Id="{a3e55664-127b-4a99-a2ba-301ba26f68b3}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_Axis2
VAR_INPUT
	// enable the axis
	Enable:		BOOL;
	// reset the axis after error
	Reset: 		BOOL;
	// Move the Axis to a given position
	MoveAxis: 	BOOL;
	// HomeAxis;
	HomeAxis:	BOOL;
	// position to move to
	Position: 	LREAL;
	// maximum velocity
	Velocity:	LREAL := 10.0;
	// Enable movement in positive direction (considering limit switch)
	Enable_Positive:	BOOL := TRUE;
	// Enable movement in negative direction (considering limit switch)
	Enable_Negative:	BOOL := TRUE;
	// jog forward
	Jog_Forward:		BOOL := FALSE;
	// jog backward
	Jog_Backwards:		BOOL := FALSE;
	// calibration input for homing
	bCalibrationCam:	BOOL;
	isModuloAxis:		BOOL := FALSE;
	// enable external setpoint generator
	Tracking:			BOOL;
END_VAR
VAR_OUTPUT
	// Reset has been executed
	ResetDone:	BOOL; 
	// the axis is in target position
	MoveDone:	BOOL;
	// the axis hass jogged
	JogDone:	BOOL;
	// the axis has stopped
	StopDone: 	BOOL;
	// the axis was calibrated and has come to a standstill
	HomeDone:	BOOL;
	// the axis is ready
	Ready:		BOOL;
	// the command has been aborted
	CommandAborted: BOOL;
	// axis busy
	Busy: 		BOOL;
	// axis is moving
	Active: 	BOOL;
	// axis is stopping
	Stopping:	BOOL;
	// axis is standing still (no commands issued) this should be the default
	StandStill:	BOOL;
	// axis is in motion
	InMotion:	BOOL;
	// axis is homing
	Homing:		BOOL;
	// axis is Accelerating or Decelerating
	InRamp:		BOOL;
	//	error condition
	Error: 		BOOL;
	// number of error
	ErrorID: 	UDINT;
	// actual position of the axis
	ActualPosition: LREAL;
	// absolute position of the axis
	AbsolutePosition:	LREAL;
	// axis is calibrated;
	Calibrated:	BOOL := FALSE;
	
END_VAR
VAR
	Axis_Power:		MC_Power;
	Axis_Reset:		MC_Reset;
	Axis_Move:		MC_MoveAbsolute;
	Axis_Modulo:	MC_MoveModulo;
	Axis_Position:	MC_ReadActualPosition;
	Axis_Stop:		MC_Stop;
	Axis_Status:	MC_ReadStatus;
	Axis_Home:		MC_Home;
	Axis_Jog: 		MC_Jog;
	Axis_SetpointEnable:	MC_ExtSetPointGenEnable;
	Axis_SetpointDisable:	MC_ExtSetPointGenDisable;
	bStop: 			BOOL;
	StopAllowed:	BOOL;
	wasEnabled:		BOOL;
	// Direction fot Axis_SetpointFeed
	Direction:		DINT;
	Acceleration:	LREAL := 1.0;
	EndTracking:	F_TRIG;
END_VAR

VAR_IN_OUT
	// axis reference
	AxisRef:	AXIS_REF;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[// query the status of the axis at the beginning of the cycle
Axis_Status(Enable := TRUE,
			Axis := AxisRef);

// Enable the axis (power signal or manual enable)
Axis_Power(
	Axis := AxisRef,
	Enable := Enable,
	Enable_Positive := Enable_Positive,
	Enable_Negative := Enable_Negative,
	Override := 100.0,
	Status => Ready);

Axis_Reset(
	Axis := 	AxisRef,
	Execute := 	Reset,
	Done => 	ResetDone);

Axis_SetpointEnable(Axis := AxisRef,
	Execute :=		Tracking AND Ready AND Calibrated AND NOT bStop,
	Position :=		Position,	// final destination
	PositionType := POSITIONTYPE_ABSOLUTE);

IF Position > AbsolutePosition THEN
	Direction := -1;
ELSE
	Direction := 1;
END_IF
	
MC_ExtSetPointGenFeed(
	Position :=		0.95*ActualPosition + 0.05*Position,
	Velocity :=		Velocity,
	Acceleration :=	Acceleration,
	Direction :=	Direction, 
	Axis :=			AxisRef);

// stop tracking on falling edge of tracking signal
EndTracking(CLK := Tracking);
Axis_SetpointDisable(Axis := AxisRef,
	Execute := NOT Tracking);

IF isModuloAxis THEN
	Axis_Modulo( 
		Axis := 		AxisRef,
		Execute := 		MoveAxis AND Ready AND Calibrated,
		Position := 	Position,
		Velocity :=		Velocity,
		Direction := 	MC_Shortest_Way,
		Done => 		MoveDone);
ELSE
	Axis_Move( 
		Axis := 		AxisRef,
		Execute := 		MoveAxis AND Ready AND Calibrated,
		Position := 	Position,
		Velocity := 	Velocity,
		Done => 		MoveDone);
END_IF

Axis_Jog(
	JogForward := 	Jog_Forward AND Ready AND Enable_Positive,
	JogBackwards := Jog_Backwards AND Ready AND Enable_Negative,
	Mode := 		MC_JOGMODE_STANDARD_FAST,
	Done => 		JogDone, 
	Axis := 		AxisRef);

Axis_Home(
	Axis := 		AxisRef,
	Execute := 		HomeAxis AND Ready,
	Position := 	position, //DEFAULT_HOME_POSITION,
	bCalibrationCam := bCalibrationCam,
	Done => 		HomeDone);	
	
IF (MoveDone OR HomeDone OR JogDone) AND NOT Axis_Status.StandStill THEN
	bStop := TRUE;
END_IF

IF MoveDone THEN
	MoveAxis := FALSE;
END_IF

IF JogDone THEN
	Jog_Forward := FALSE;
	Jog_Backwards := FALSE;
END_IF

IF HomeDone THEN
	Calibrated := TRUE;
	HomeAxis := FALSE;
END_IF

IF StopDone THEN
	bStop := FALSE;
END_IF

StopAllowed :=	Axis_Status.StandStill OR  
				Axis_Status.ContinuousMotion OR
				Axis_Status.DiscreteMotion OR
				Axis_Status.SynchronizedMotion OR
				Axis_Status.Homing;

Axis_Stop( 
	Axis := 	AxisRef,
	Execute := 	bStop AND StopAllowed,
	Done => 	StopDone);

Axis_Position(
	Axis := 	AxisRef,
	Enable := 	Calibrated,
	Position => AbsolutePosition);

IF isModuloAxis THEN
	ActualPosition := AxisRef.NcToPlc.ModuloActPos; // required e.g. for Filterwheel
ELSE
	ActualPosition := AbsolutePosition; //AxisRef.NcToPlc.ActPos;
END_IF

IF Axis_Power.Error THEN
	ErrorID := Axis_Power.ErrorID;
END_IF

IF Axis_SetpointEnable.Error THEN
	ErrorID := Axis_SetpointEnable.ErrorID;
END_IF

IF Axis_Reset.Error THEN
	ErrorID := Axis_Reset.ErrorID;
END_IF

IF Axis_Modulo.Error THEN
	ErrorID := Axis_Modulo.ErrorID;
END_IF

IF Axis_Move.Error THEN
	ErrorID := Axis_Move.ErrorID;
END_IF

IF Axis_Home.Error THEN
	ErrorID := Axis_Home.ErrorID;
END_IF

IF Axis_Jog.Error THEN
	ErrorID := Axis_Jog.ErrorID;
END_IF

IF Axis_Stop.Error THEN
	ErrorID := Axis_Stop.ErrorID;
END_IF

Busy := 	Axis_Power.Busy OR 
			Axis_SetpointEnable.Busy OR
			Axis_Reset.Busy OR 
			Axis_Modulo.Busy OR
			Axis_Move.Busy OR 
			Axis_Home.Busy OR
			Axis_Jog.Busy OR
			Axis_Position.Busy;

Error := 	Axis_Power.Error OR 
			Axis_SetpointEnable.Error OR
			Axis_Reset.Error OR 
			Axis_Modulo.Error OR
			Axis_Move.Error OR 
			Axis_Home.Error OR
			Axis_Jog.Error OR 
			Axis_Stop.Error;

Active := 	Axis_Power.Active OR 
			Axis_Modulo.Active OR
			Axis_Move.Active OR 
			Axis_Home.Active OR
			Axis_Jog.Active OR 
			Axis_Stop.Active;

CommandAborted :=	Axis_Modulo.CommandAborted OR
					Axis_Move.CommandAborted OR 
					Axis_Home.CommandAborted OR
					Axis_Jog.CommandAborted OR 
					Axis_Stop.CommandAborted;	
	
IF NOT Error THEN
	ErrorID := 0;
END_IF
			
InMotion := Axis_Status.ConstantVelocity OR
			Axis_Status.DiscreteMotion OR
			Axis_Status.ContinuousMotion OR
			Axis_Status.SynchronizedMotion; 
InRamp :=	Axis_Status.Accelerating OR
			Axis_Status.Decelerating;
Stopping := Axis_Status.Stopping;
StandStill := Axis_Status.StandStill;
Homing :=	Axis_Status.Homing;]]></ST>
    </Implementation>
    <LineIds Name="FB_Axis2">
      <LineId Id="292" Count="0" />
      <LineId Id="200" Count="1" />
      <LineId Id="1619" Count="0" />
      <LineId Id="198" Count="0" />
      <LineId Id="27" Count="0" />
      <LineId Id="294" Count="0" />
      <LineId Id="28" Count="4" />
      <LineId Id="37" Count="1" />
      <LineId Id="286" Count="0" />
      <LineId Id="39" Count="1" />
      <LineId Id="1620" Count="0" />
      <LineId Id="1280" Count="0" />
      <LineId Id="1283" Count="2" />
      <LineId Id="1415" Count="0" />
      <LineId Id="1301" Count="0" />
      <LineId Id="1417" Count="0" />
      <LineId Id="1419" Count="1" />
      <LineId Id="1418" Count="0" />
      <LineId Id="1416" Count="0" />
      <LineId Id="1287" Count="0" />
      <LineId Id="1297" Count="3" />
      <LineId Id="1296" Count="0" />
      <LineId Id="1413" Count="0" />
      <LineId Id="1411" Count="0" />
      <LineId Id="1294" Count="0" />
      <LineId Id="1288" Count="0" />
      <LineId Id="1291" Count="0" />
      <LineId Id="1185" Count="0" />
      <LineId Id="391" Count="0" />
      <LineId Id="491" Count="3" />
      <LineId Id="891" Count="0" />
      <LineId Id="523" Count="0" />
      <LineId Id="495" Count="0" />
      <LineId Id="476" Count="0" />
      <LineId Id="479" Count="3" />
      <LineId Id="892" Count="0" />
      <LineId Id="483" Count="0" />
      <LineId Id="477" Count="0" />
      <LineId Id="264" Count="0" />
      <LineId Id="266" Count="3" />
      <LineId Id="275" Count="0" />
      <LineId Id="265" Count="0" />
      <LineId Id="611" Count="0" />
      <LineId Id="303" Count="2" />
      <LineId Id="307" Count="0" />
      <LineId Id="1002" Count="0" />
      <LineId Id="309" Count="0" />
      <LineId Id="302" Count="0" />
      <LineId Id="898" Count="2" />
      <LineId Id="897" Count="0" />
      <LineId Id="58" Count="2" />
      <LineId Id="297" Count="2" />
      <LineId Id="301" Count="0" />
      <LineId Id="300" Count="0" />
      <LineId Id="394" Count="2" />
      <LineId Id="691" Count="0" />
      <LineId Id="397" Count="0" />
      <LineId Id="893" Count="3" />
      <LineId Id="875" Count="5" />
      <LineId Id="67" Count="1" />
      <LineId Id="290" Count="0" />
      <LineId Id="69" Count="0" />
      <LineId Id="72" Count="2" />
      <LineId Id="291" Count="0" />
      <LineId Id="75" Count="0" />
      <LineId Id="79" Count="0" />
      <LineId Id="186" Count="0" />
      <LineId Id="603" Count="1" />
      <LineId Id="606" Count="1" />
      <LineId Id="605" Count="0" />
      <LineId Id="772" Count="0" />
      <LineId Id="771" Count="0" />
      <LineId Id="773" Count="1" />
      <LineId Id="1513" Count="3" />
      <LineId Id="776" Count="0" />
      <LineId Id="775" Count="0" />
      <LineId Id="777" Count="1" />
      <LineId Id="881" Count="0" />
      <LineId Id="794" Count="0" />
      <LineId Id="882" Count="1" />
      <LineId Id="788" Count="0" />
      <LineId Id="787" Count="0" />
      <LineId Id="789" Count="1" />
      <LineId Id="917" Count="0" />
      <LineId Id="913" Count="2" />
      <LineId Id="783" Count="3" />
      <LineId Id="779" Count="3" />
      <LineId Id="903" Count="0" />
      <LineId Id="905" Count="0" />
      <LineId Id="1517" Count="0" />
      <LineId Id="906" Count="2" />
      <LineId Id="911" Count="0" />
      <LineId Id="909" Count="1" />
      <LineId Id="791" Count="0" />
      <LineId Id="608" Count="0" />
      <LineId Id="1518" Count="0" />
      <LineId Id="884" Count="2" />
      <LineId Id="912" Count="0" />
      <LineId Id="887" Count="1" />
      <LineId Id="1177" Count="0" />
      <LineId Id="1179" Count="1" />
      <LineId Id="1182" Count="2" />
      <LineId Id="1089" Count="0" />
      <LineId Id="1186" Count="0" />
      <LineId Id="1189" Count="3" />
      <LineId Id="1178" Count="0" />
      <LineId Id="1193" Count="0" />
      <LineId Id="792" Count="0" />
      <LineId Id="1091" Count="1" />
      <LineId Id="1090" Count="0" />
      <LineId Id="178" Count="0" />
      <LineId Id="188" Count="2" />
      <LineId Id="195" Count="1" />
      <LineId Id="187" Count="0" />
      <LineId Id="385" Count="1" />
    </LineIds>
  </POU>
</TcPlcObject>