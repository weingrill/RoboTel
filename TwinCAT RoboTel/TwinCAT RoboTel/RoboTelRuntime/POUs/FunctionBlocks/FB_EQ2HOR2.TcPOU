<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.9">
  <POU Name="FB_EQ2HOR2" Id="{7b34f02a-1435-4300-8153-5c49f62d1b5b}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_EQ2HOR2
VAR_INPUT
	// right ascension in degrees
	alpha: LREAL;
	// declination in degrees
	delta: LREAL;
	// longitude in degrees
	lon: LREAL;
	// latitude in degrees
	lat: LREAL;
	// Julian Days
	JD: LREAL;
END_VAR
VAR_OUTPUT
	// altitude in degrees
	alt: LREAL;
	// azimuth in degrees
	az: LREAL;
	// hour angle in degreesss
	ha: LREAL;
END_VAR
VAR
	lst, 
	T , theta0, gmst: LREAL;
	// helper variables
	sinalt, sinaz, cosaz, cosalt, az1, az2, az3, length,
	// in radians
	phi_r, tau_r, alpha_r, delta_r: LREAL;
	//quadrant: UINT;
END_VAR
VAR CONSTANT
	d2r:	LREAL := PI/180.0;
	r2d:	LREAL := 180.0/PI;
	//h2r:	LREAL := PI/12.0;
	//h2d:	LREAL := 15.0;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[(* 
source: http://star-www.st-and.ac.uk/~fv/webnotes/chapter7.htm
https://squarewidget.com/astronomical-calculations-sidereal-time/

*)
//lst := ct2lst(lon, jd);
T := ((JD - 2451545.0) / 36525.0);
theta0 := 280.46061837 + 360.98564736629 * (JD - 2451545.0) + (0.000387933 * T * T) - (T * T * T / 38710000.0); // (12.4)
gmst := MODABS(theta0, 360.0);
lst := gmst + lon; // LST in degrees
// ha := MODABS(lst*15.0 - alpha, 360.0);
ha := MODABS(lst - alpha, 360.0);

alpha_r := alpha * d2r;
delta_r := delta * d2r;
tau_r := lst*d2r - alpha_r;
//tau_r := MODABS(lst*d2r - alpha_r, 2.0*PI);
phi_r := lat*d2r;

//sinalt := (SIN(delta*d2r)*SIN(lat*d2r)) + (COS(delta*d2r)*COS(lat*d2r)*COS(ha*d2r));
sinalt := SIN(phi_r)*SIN(delta_r) + COS(phi_r)*COS(delta_r)*COS(tau_r);
alt := ASIN(sinalt) * r2d;
cosalt := COS(alt*d2r);

IF ABS(cosalt) > 0.0 THEN
	sinaz := -SIN(tau_r)*COS(delta_r)/cosalt;
ELSE
	sinaz := 0.0;
END_IF

IF ABS(cosalt*COS(phi_r)) > 0.0 THEN
	cosaz := (SIN(delta_r) - SIN(phi_r)*sinalt)
			/(cosalt*COS(phi_r));
ELSE
	cosaz := 0.0;
END_IF

length := sinaz*sinaz + cosaz*cosaz;

az1 := ASIN(LIMIT(-1.0, sinaz, 1.0)) * r2d;

az2 := ACOS(LIMIT(-1.0, cosaz, 1.0)) * r2d;

az3 := ATAN2(SIN(phi_r)*COS(tau_r) - COS(phi_r)*TAN(delta_r), SIN(tau_r)) * r2d;

IF sinaz >= 0.0 AND cosaz >=0.0 THEN // Q I
	az := az1;
ELSIF sinaz < 0.0 AND cosaz >= 0.0 THEN // Q II
	az := MODABS(-az2, 360.0);
ELSIF sinaz < 0.0 AND cosaz < 0.0 THEN // Q III
	az := 180 - az1;
ELSIF sinaz >= 0.0 AND cosaz < 0.0 THEN // Q IV
	az := az2;
END_IF]]></ST>
    </Implementation>
    <LineIds Name="FB_EQ2HOR2">
      <LineId Id="81" Count="0" />
      <LineId Id="83" Count="0" />
      <LineId Id="90" Count="1" />
      <LineId Id="82" Count="0" />
      <LineId Id="9" Count="0" />
      <LineId Id="85" Count="0" />
      <LineId Id="84" Count="0" />
      <LineId Id="88" Count="0" />
      <LineId Id="86" Count="0" />
      <LineId Id="16" Count="0" />
      <LineId Id="89" Count="0" />
      <LineId Id="145" Count="0" />
      <LineId Id="144" Count="0" />
      <LineId Id="146" Count="0" />
      <LineId Id="159" Count="1" />
      <LineId Id="148" Count="1" />
      <LineId Id="18" Count="0" />
      <LineId Id="150" Count="0" />
      <LineId Id="26" Count="0" />
      <LineId Id="213" Count="0" />
      <LineId Id="203" Count="0" />
      <LineId Id="27" Count="0" />
      <LineId Id="206" Count="0" />
      <LineId Id="204" Count="0" />
      <LineId Id="207" Count="0" />
      <LineId Id="205" Count="0" />
      <LineId Id="209" Count="0" />
      <LineId Id="208" Count="0" />
      <LineId Id="143" Count="0" />
      <LineId Id="158" Count="0" />
      <LineId Id="210" Count="2" />
      <LineId Id="156" Count="1" />
      <LineId Id="142" Count="0" />
      <LineId Id="93" Count="0" />
      <LineId Id="92" Count="0" />
      <LineId Id="50" Count="0" />
      <LineId Id="139" Count="1" />
      <LineId Id="163" Count="0" />
      <LineId Id="161" Count="0" />
      <LineId Id="130" Count="0" />
      <LineId Id="138" Count="0" />
      <LineId Id="164" Count="4" />
      <LineId Id="153" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>