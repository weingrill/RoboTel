<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.4">
  <POU Name="DomeControl" Id="{0e02434d-920e-4c0f-81fc-5ff7d5573875}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM DomeControl
VAR_INPUT
	enable,
	reset,
	left,
	right: 		BOOL;
	OpenDome,
	CloseDome,
	Light: 		BOOL;
	position:	LREAL;
END_VAR
VAR_OUTPUT
	Error:		BOOL;
	ErrorID:	UDINT;
END_VAR
VAR
	DomeAxis: FB_Axis2;
	Azimuth_current: 	LREAL;
	manual_enable:	BOOL;
	move_azimuth:	BOOL;
	stop_done:		BOOL;
	DomeOpened,
	DomeClosed:			BOOL;
   	DomeControlWord:	WORD;
	DeHumidifierDelay : TON;
	LightTimer:		TP;
	bWrite       : BOOL;(* Rising edge at this variable starts command execution *)
	nState       : BYTE := 0;
	bBusy        : BOOL;
	bError       : BOOL;
	nErrID       : UDINT;
	arrBool       : ARRAY[0..3] OF BOOL;(* Server data to be written *)
	i            : INT;

	WriteCycle:	FB_BLINK;
	
	fbWriteReq: ADSWRITE := ( NETID := '5.73.45.158.1.1', PORT := 851, TMOUT := DEFAULT_ADS_TIMEOUT );
	fbReadReq: ADSREAD := ( NETID := '5.73.45.158.1.1', PORT := 851, TMOUT := DEFAULT_ADS_TIMEOUT );
	DomeCalibration: MC_SetPosition;
	DomeCommEvent:	FB_Eventlog;
	DomeAxisEvent:	FB_Eventlog;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[(* source: https://infosys.beckhoff.de/english.php?content=../content/1033/tcplclib_tc2_system/18014399220202635.html&id= *)
GVL_Dome.Inverter_Enable := FALSE;
GVL_Dome.Inverter_Velocity := 0;
manual_enable := GVL_Dome.Clockwise OR GVL_Dome.CounterClockwise;

IF GVL_Dome.bVeloHigh THEN
	GVL_Dome.Inverter_Velocity := 32000;
	GVL_Dome.Inverter_Enable := TRUE;
END_IF

IF GVL_Dome.bVeloLow THEN
	GVL_Dome.Inverter_Velocity := 16000;
	GVL_Dome.Inverter_Enable := TRUE;
END_IF

IF GVL_Dome.bBreak THEN
	GVL_Dome.Inverter_Velocity := 0;
	GVL_Dome.Inverter_Enable := FALSE;
END_IF

GVL_Dome.Inverter_DirectionMinus := GVL_Dome.bDirectionPlus;

IF ABS(Azimuth_current - position) > 1.0 THEN
	move_azimuth := TRUE;
END_IF

// velocity = 2.22? or 180° in 81s, 360° in 120s

IF NOT DomeAxis.Calibrated THEN
	DomeAxis.HomeAxis := TRUE;
ELSE
	DomeAxis.HomeAxis := FALSE;
END_IF

DomeAxis(
	Enable := 		enable OR manual_enable,
	Reset := 		reset,
	MoveAxis := 	move_azimuth,
	Position := 	position,
	Jog_Forward :=	right OR GVL_Dome.Clockwise,
	Jog_Backwards := left OR GVL_Dome.CounterClockwise,
	bCalibrationCam := GVL_Dome.Azimut_home,
	isModuloAxis := TRUE,
	StopDone =>	stop_done,
	Error =>		error,
	ErrorID =>		ErrorID,
	ActualPosition => Azimuth_current,
	AxisRef	:= 		GVL_Dome.DomeAxisRef);

// re-calibrate the dome, if we pass the reference switch
DomeCalibration(Axis := GVL_Dome.DomeAxisRef,
	Execute := GVL_Dome.Azimut_home,
	Position := 200.0); // TODO: Options := ST_SetPositionOptions.ClearPositionLag
		
IF stop_done THEN
	move_azimuth := FALSE;
END_IF

IF CloseDome THEN
	OpenDome := FALSE;
END_IF

DeHumidifierDelay(IN := NOT OpenDome, PT := T#10S, Q => GVL_Dome.DeHumidifier);
LightTimer(IN := Light, PT := T#60M);
// Light is switched off after 60 minutes or if Light signal is low
GVL_Dome.Light := Light AND LightTimer.Q;

(* Here starts the remote section for moving parts of the dome. *)

DomeControlWord.0 := TRUE;
DomeControlWord.1 := OpenDome;
DomeControlWord.2 := CloseDome;

WriteCycle(ENABLE := TRUE, ON_TIME := T#5S, OFF_TIME := T#5S, Q => bWrite);

CASE nState OF
   0:
      IF bWrite THEN
         bWrite := FALSE;
         
         bBusy := TRUE;
         bError := FALSE;
         nErrID := 0;
         
         fbWriteReq( WRITE := FALSE );
         fbWriteReq( IDXGRP := 16#4020, IDXOFFS := 0, 
                  LEN := SIZEOF( DomeControlWord ), SRCADDR := ADR( DomeControlWord ), 
                  WRITE := TRUE );
         nState := 1;            
      END_IF
      
   1:
      fbWriteReq( WRITE := FALSE, BUSY=>bBusy, ERR=>bError, ERRID=>nErrID );
      IF NOT bBusy THEN
         IF NOT bError THEN
			DomeControlWord.0 := TRUE;
            nState := 0;(* Success *)
         ELSE
			DomeControlWord.0 := FALSE;
            nState := 100;(* Error *)
         END_IF
      END_IF

   100:(* TODO::Implement error handler *)
      nState := 0;
   
END_CASE

DomeCommEvent(	Trigger := bError, 
					Level := ADSLOG_MSGTYPE_ERROR,
					FormatString := 'DomeCommunicationsError: %s',
					OnMessage := UDINT_TO_STRING(nErrID),
					OffMessage := 'OK',
					OffLevel := ADSLOG_MSGTYPE_HINT);
DomeAxisEvent(	
	Trigger := 		Error, 
	Level := 		ADSLOG_MSGTYPE_ERROR,
	FormatString :=	'Dome Axis Error: %s',
	OnMessage := 	UDINT_TO_STRING(ErrorID),
	OffMEssage := 	'OK');
				]]></ST>
    </Implementation>
    <LineIds Name="DomeControl">
      <LineId Id="5" Count="0" />
      <LineId Id="650" Count="0" />
      <LineId Id="673" Count="0" />
      <LineId Id="666" Count="0" />
      <LineId Id="636" Count="0" />
      <LineId Id="635" Count="0" />
      <LineId Id="639" Count="0" />
      <LineId Id="647" Count="0" />
      <LineId Id="638" Count="0" />
      <LineId Id="668" Count="4" />
      <LineId Id="640" Count="2" />
      <LineId Id="648" Count="0" />
      <LineId Id="643" Count="2" />
      <LineId Id="934" Count="5" />
      <LineId Id="954" Count="2" />
      <LineId Id="960" Count="1" />
      <LineId Id="957" Count="0" />
      <LineId Id="871" Count="0" />
      <LineId Id="913" Count="0" />
      <LineId Id="925" Count="0" />
      <LineId Id="914" Count="2" />
      <LineId Id="919" Count="1" />
      <LineId Id="950" Count="0" />
      <LineId Id="933" Count="0" />
      <LineId Id="951" Count="0" />
      <LineId Id="921" Count="0" />
      <LineId Id="923" Count="0" />
      <LineId Id="307" Count="0" />
      <LineId Id="305" Count="0" />
      <LineId Id="941" Count="0" />
      <LineId Id="778" Count="0" />
      <LineId Id="329" Count="0" />
      <LineId Id="780" Count="1" />
      <LineId Id="779" Count="0" />
      <LineId Id="330" Count="0" />
      <LineId Id="952" Count="1" />
      <LineId Id="749" Count="3" />
      <LineId Id="771" Count="1" />
      <LineId Id="830" Count="1" />
      <LineId Id="775" Count="0" />
      <LineId Id="931" Count="1" />
      <LineId Id="776" Count="0" />
      <LineId Id="747" Count="1" />
      <LineId Id="754" Count="0" />
      <LineId Id="756" Count="0" />
      <LineId Id="755" Count="0" />
      <LineId Id="716" Count="20" />
      <LineId Id="789" Count="0" />
      <LineId Id="737" Count="1" />
      <LineId Id="790" Count="0" />
      <LineId Id="739" Count="6" />
      <LineId Id="349" Count="0" />
      <LineId Id="758" Count="5" />
      <LineId Id="757" Count="0" />
      <LineId Id="943" Count="5" />
      <LineId Id="942" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>