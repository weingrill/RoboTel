<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.9">
  <POU Name="PendantControl" Id="{4c9494b1-b987-44f6-88ae-faae341979f2}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM PendantControl
VAR
	// program selection of the pendant control
	Selection:	UINT;
	// error on the pendant control
	Error:		BOOL;
	// manual switch
	manual:		BOOL;
	//enable button
	enable:		BOOL;
	//reset button
	reset:		BOOL;
	// up button
	up:			BOOL;
	// down button
	down:		BOOL;
	// left button
	left:		BOOL;
	// right button
	right:		BOOL;
	// counter for filter position
	Filter_position:	CTUD;
	
	Elevation_enable_Button: 	FB_ButtonEnable;
	Azimuth_enable_Button: 		FB_ButtonEnable;
	TelescopeControl_enable: 	FB_ButtonEnable;
	Hydraulics_enable_Button: 	FB_ButtonEnable;
	Tracking_enable:			FB_ButtonEnable;
	ResetDelay:	TON;
	TwinCATRestart: TC_Restart;
	R_Enable:	R_TRIG;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[(* 
This program is responsible for the manual control of the telescope.
all movable parts can be controlled from here. This is mainly for testing and
maintenance.
WARNING! Some of the safety routines are disabled, when operating the telescope manually.
*)
// calculate the value of the selector
Selection := 1*BOOL_TO_UINT(GVL_pendant_control.BCD1) + 
			 2*BOOL_TO_UINT(GVL_pendant_control.BCD2) + 
			 4*BOOL_TO_UINT(GVL_pendant_control.BCD4) +
			 8*BOOL_TO_UINT(GVL_pendant_control.BCD8);

// detect disconnection of the manual controls (should also trigger emergency stop).			 
Error := (Selection = 0);

// disable all the lamps
GVL_pendant_control.lamp_left := FALSE;
GVL_pendant_control.lamp_right := FALSE;
GVL_pendant_control.lamp_up := FALSE;
GVL_pendant_control.lamp_down := FALSE;

// clooect the state of all buttons
manual := GVL_pendant_control.key_switch;
enable := GVL_pendant_control.start_switch;
reset := GVL_pendant_control.reset_switch;
up := GVL_pendant_control.direction_up;
down := GVL_pendant_control.direction_down;
left := GVL_pendant_control.direction_left;
right := GVL_pendant_control.direction_right;

R_Enable(CLK := enable);
// the error lamp is the same as the error lamp of the main panel
GVL_pendant_control.lamp_error := GVL_Main.lamp_error;

// enable only the selected item and connect lamps and buttons accordingly
CASE Selection OF
	1:	// reserved for Cover1 control
		CoverControl.Cover1_enable := manual;
		CoverControl.reset := reset;
		CoverControl.Cover1_open := up;
		CoverControl.Cover1_close := down;
		GVL_pendant_control.lamp_up := GVL_Telescope.cover1_open;
		GVL_pendant_control.lamp_down := GVL_Telescope.cover1_closed;

	2: // Cover2 control
		CoverControl.Cover2_enable := manual;
		CoverControl.reset := reset;
		CoverControl.Cover2_open := up;
		CoverControl.Cover2_close := down;
		GVL_pendant_control.lamp_up := GVL_Telescope.cover2_open;
		GVL_pendant_control.lamp_down := GVL_Telescope.cover2_closed;
 	
	3:  // Cover3 control
		CoverControl.Cover3_enable := manual;
		CoverControl.Cover3_open := up;
		CoverControl.Cover3_close := down;
		CoverControl.reset := reset;
		GVL_pendant_control.lamp_up := GVL_Telescope.cover3_open;
		GVL_pendant_control.lamp_down := GVL_Telescope.cover3_closed;
		
	4:	// Nasmyth / mirror M3 control
		NasmythControl.enable := manual;
		GVL_pendant_control.lamp_left := GVL_Telescope.nasmyth_limit_left;
		GVL_pendant_control.lamp_right := GVL_Telescope.nasmyth_limit_right;
		
		NasmythControl.left := left;
		NasmythControl.right := right;
		NasmythControl.reset := reset;
		
	5:	// Focus Control
		GVL_pendant_control.lamp_up := NOT GVL_Telescope.focus_limit_far;
		GVL_pendant_control.lamp_down := NOT GVL_Telescope.focus_limit_near;
		FocusControl.enable := manual;
		FocusControl.outward := up;
		FocusControl.inward := down;
		Focuscontrol.reset := reset;
						
	6:	// Derotator control
		GVL_pendant_control.lamp_left := NOT GVL_Telescope.Derotator_inputs.1;
		GVL_pendant_control.lamp_right := NOT GVL_Telescope.Derotator_inputs.0;
		DerotatorControl.enable := manual;
		DerotatorControl.left := left AND NOT GVL_Telescope.Derotator_inputs.1;
		DerotatorControl.right := right AND NOT GVL_Telescope.Derotator_inputs.0;
		DerotatorControl.reset := reset;
						
	7:	// Elevation Control
		GVL_pendant_control.lamp_up := GVL_Telescope.Elevation_inputs.0;
		GVL_pendant_control.lamp_down := GVL_Telescope.Elevation_inputs.1;
		ElevationControl.up := up AND GVL_Telescope.Elevation_inputs.0;
		ElevationControl.down := down AND GVL_Telescope.Elevation_inputs.1;
		IF manual THEN
			Elevation_enable_button(
				SET := enable, 
				RESET := ElevationControl.error OR ElevationControl.warning, 
				Q => ElevationControl.enable);	
			GVL_pendant_control.lamp_error := ElevationControl.error;		
		END_IF
		ElevationControl.reset := reset;
		
	8:	// This selection will become RA/Dec Mode with tracking enabled!
		GVL_pendant_control.lamp_left := GVL_Telescope.Azimuth_inputs.0; // NOT GVL_Telescope.azimut_limit_switch;
		GVL_pendant_control.lamp_right := GVL_Telescope.Azimuth_inputs.1; // NOT GVL_Telescope.azimut_limit_switch;
		AzimuthElevationControl.left := left AND GVL_Telescope.Azimuth_inputs.0;
		AzimuthElevationControl.right := right AND GVL_Telescope.Azimuth_inputs.1;
		AzimuthElevationControl.reset := reset;
		IF manual THEN
			Azimuth_enable_button(SET := enable, 
			RESET := AzimuthElevationControl.error, 
			Q => AzimuthElevationControl.enable);
			GVL_pendant_control.lamp_error := AzimuthElevationControl.error;
		END_IF
		
	9: 	// Dome control
		GVL_pendant_control.lamp_left := DomeControl.enable;
		GVL_pendant_control.lamp_right := DomeControl.enable;
		GVL_pendant_control.lamp_up := DomeControl.DomeClosed;
		GVL_pendant_control.lamp_down := DomeControl.DomeOpened;
		DomeControl.left := left;
		DomeControl.right := right;
		DomeControl.OpenDome := up;
		DomeControl.CloseDome := down;
		DomeControl.reset := reset;
		
	10:	// FilterWheel control
		FilterWheelControl.Enable := manual;
		GVL_pendant_control.lamp_left := manual;
		GVL_pendant_control.lamp_right := manual;
		FilterWheelControl.left := left;
		FilterWheelControl.right := right;
		Filter_position(CU := up, CD := down, RESET := reset, PV := 15);
		GVL_pendant_control.lamp_up := NOT Filter_position.QU;
		GVL_pendant_control.lamp_down := NOT Filter_position.QD;
		IF enable THEN
			FilterWheelControl.filter_position := Filter_position.CV;
		END_IF
		FilterWheelControl.reset := reset;

	12:	// manual Telescope Control
		IF manual THEN
			GVL_pendant_control.lamp_up := TelescopeControl.power;
			GVL_pendant_control.lamp_down := TelescopeControl.power;
			GVL_pendant_control.lamp_left := TelescopeControl.power;
			GVL_pendant_control.lamp_right := TelescopeControl.power;
	
			TelescopeControl.gohome := down;
			TelescopeControl.park := up;
			TelescopeControl.goto := right;
			Tracking_enable(SET := enable, RESET := reset, Q=> TelescopeControl.track);
			TelescopeControl.reset := reset;
			Telescopecontrol.stop := left;		
		END_IF
		
	13: // Telescope Control
		Telescopecontrol_enable(SET := enable, 
			RESET := ElevationControl.error OR AzimuthElevationControl.error, 
			Q => TelescopeControl.power);
		TelescopeControl.reset := reset;
		IF manual THEN
			ElevationControl.up := up AND GVL_Telescope.Elevation_inputs.0;
			ElevationControl.down := down AND GVL_Telescope.Elevation_inputs.1;
			AzimuthElevationControl.left := left AND GVL_Telescope.Azimuth_inputs.0;
			AzimuthElevationControl.right := right AND GVL_Telescope.Azimuth_inputs.1;
			TelescopeControl.ra := TelescopeControl.rightascension_calc;
			TelescopeControl.de := TelescopeControl.declination_calc;
		ELSE
			GVL_pendant_control.lamp_up := ElevationControl.enable;
			GVL_pendant_control.lamp_down := ElevationControl.enable;
			GVL_pendant_control.lamp_left := AzimuthElevationControl.enable;
			GVL_pendant_control.lamp_right := AzimuthElevationControl.enable;
			IF up THEN 
				Telescopecontrol.elevation_offset := Telescopecontrol.elevation_offset + 10.0/3600.0; 
			ELSIF down THEN 
				Telescopecontrol.elevation_offset := Telescopecontrol.elevation_offset - 10.0/3600.0; 
			END_IF;
			IF left THEN 
				Telescopecontrol.azimuth_offset := Telescopecontrol.azimuth_offset - 10.0/3600.0; 
			ELSIF right THEN 
				Telescopecontrol.azimuth_offset := Telescopecontrol.azimuth_offset + 10.0/3600.0; 
			END_IF;
		END_IF
		ResetDelay(IN := reset, PT := T#10S);
		TwinCATRestart(NETID := '', RESTART := ResetDelay.Q, TMOUT := T#60S);
	
	14: GVL_Telescope.horn := manual;
	
	15:	// Hydraulics control
		GVL_pendant_control.lamp_up := HydraulicsControl.oil_pressure_OK AND Hydraulicscontrol.brake_closed;
		GVL_pendant_control.lamp_down := HydraulicsControl.oil_pressure_OK AND Hydraulicscontrol.brake_open;
		GVL_pendant_control.lamp_left := HydraulicsControl.pump_running;
		GVL_pendant_control.lamp_right := HydraulicsControl.suction_running;
		IF manual THEN
			Hydraulics_enable_button(SET := enable, 
			RESET := HydraulicsControl.error OR reset);
			IF Hydraulics_enable_button.Q THEN
				Hydraulicscontrol.start := TRUE;
			ELSE
				Hydraulicscontrol.stop := TRUE;
			END_IF
			IF up THEN
				Hydraulicscontrol.open_brake := TRUE;
				Hydraulicscontrol.close_brake := FALSE;
			END_IF
			IF down THEN
				Hydraulicscontrol.open_brake := FALSE;
				Hydraulicscontrol.close_brake := TRUE;
			END_IF
			GVL_pendant_control.lamp_error := HydraulicsControl.error;
		END_IF
END_CASE
]]></ST>
    </Implementation>
    <LineIds Name="PendantControl">
      <LineId Id="614" Count="0" />
      <LineId Id="616" Count="0" />
      <LineId Id="618" Count="2" />
      <LineId Id="615" Count="0" />
      <LineId Id="613" Count="0" />
      <LineId Id="5" Count="0" />
      <LineId Id="7" Count="2" />
      <LineId Id="677" Count="0" />
      <LineId Id="674" Count="2" />
      <LineId Id="17" Count="2" />
      <LineId Id="25" Count="1" />
      <LineId Id="622" Count="1" />
      <LineId Id="232" Count="0" />
      <LineId Id="318" Count="5" />
      <LineId Id="1096" Count="0" />
      <LineId Id="624" Count="0" />
      <LineId Id="326" Count="0" />
      <LineId Id="27" Count="0" />
      <LineId Id="627" Count="0" />
      <LineId Id="331" Count="0" />
      <LineId Id="11" Count="1" />
      <LineId Id="995" Count="0" />
      <LineId Id="1037" Count="0" />
      <LineId Id="634" Count="0" />
      <LineId Id="640" Count="3" />
      <LineId Id="34" Count="0" />
      <LineId Id="632" Count="0" />
      <LineId Id="996" Count="0" />
      <LineId Id="1038" Count="0" />
      <LineId Id="636" Count="0" />
      <LineId Id="106" Count="1" />
      <LineId Id="101" Count="0" />
      <LineId Id="59" Count="0" />
      <LineId Id="633" Count="0" />
      <LineId Id="997" Count="0" />
      <LineId Id="638" Count="0" />
      <LineId Id="117" Count="0" />
      <LineId Id="1039" Count="0" />
      <LineId Id="81" Count="0" />
      <LineId Id="628" Count="0" />
      <LineId Id="80" Count="0" />
      <LineId Id="770" Count="0" />
      <LineId Id="137" Count="1" />
      <LineId Id="241" Count="0" />
      <LineId Id="602" Count="3" />
      <LineId Id="236" Count="0" />
      <LineId Id="769" Count="0" />
      <LineId Id="237" Count="0" />
      <LineId Id="726" Count="0" />
      <LineId Id="507" Count="0" />
      <LineId Id="506" Count="0" />
      <LineId Id="505" Count="0" />
      <LineId Id="240" Count="0" />
      <LineId Id="238" Count="0" />
      <LineId Id="768" Count="0" />
      <LineId Id="239" Count="0" />
      <LineId Id="727" Count="0" />
      <LineId Id="222" Count="0" />
      <LineId Id="554" Count="1" />
      <LineId Id="465" Count="0" />
      <LineId Id="311" Count="0" />
      <LineId Id="609" Count="0" />
      <LineId Id="289" Count="0" />
      <LineId Id="327" Count="1" />
      <LineId Id="1040" Count="0" />
      <LineId Id="1043" Count="3" />
      <LineId Id="1084" Count="0" />
      <LineId Id="1042" Count="0" />
      <LineId Id="772" Count="0" />
      <LineId Id="285" Count="0" />
      <LineId Id="299" Count="0" />
      <LineId Id="462" Count="0" />
      <LineId Id="300" Count="0" />
      <LineId Id="309" Count="0" />
      <LineId Id="371" Count="1" />
      <LineId Id="1047" Count="0" />
      <LineId Id="1050" Count="2" />
      <LineId Id="1083" Count="0" />
      <LineId Id="1049" Count="0" />
      <LineId Id="463" Count="0" />
      <LineId Id="377" Count="0" />
      <LineId Id="610" Count="0" />
      <LineId Id="379" Count="0" />
      <LineId Id="835" Count="1" />
      <LineId Id="382" Count="1" />
      <LineId Id="833" Count="1" />
      <LineId Id="384" Count="0" />
      <LineId Id="464" Count="0" />
      <LineId Id="298" Count="0" />
      <LineId Id="998" Count="0" />
      <LineId Id="611" Count="0" />
      <LineId Id="457" Count="2" />
      <LineId Id="680" Count="0" />
      <LineId Id="684" Count="1" />
      <LineId Id="682" Count="0" />
      <LineId Id="686" Count="1" />
      <LineId Id="460" Count="0" />
      <LineId Id="1093" Count="0" />
      <LineId Id="1099" Count="0" />
      <LineId Id="1137" Count="0" />
      <LineId Id="1140" Count="7" />
      <LineId Id="1151" Count="0" />
      <LineId Id="1148" Count="0" />
      <LineId Id="1150" Count="0" />
      <LineId Id="1139" Count="0" />
      <LineId Id="1090" Count="0" />
      <LineId Id="841" Count="0" />
      <LineId Id="846" Count="0" />
      <LineId Id="1035" Count="1" />
      <LineId Id="843" Count="0" />
      <LineId Id="1027" Count="0" />
      <LineId Id="1058" Count="0" />
      <LineId Id="1089" Count="0" />
      <LineId Id="1085" Count="3" />
      <LineId Id="1060" Count="0" />
      <LineId Id="1074" Count="3" />
      <LineId Id="1062" Count="0" />
      <LineId Id="1066" Count="3" />
      <LineId Id="1064" Count="0" />
      <LineId Id="1070" Count="1" />
      <LineId Id="1073" Count="0" />
      <LineId Id="1072" Count="0" />
      <LineId Id="1059" Count="0" />
      <LineId Id="1033" Count="1" />
      <LineId Id="842" Count="0" />
      <LineId Id="802" Count="0" />
      <LineId Id="455" Count="0" />
      <LineId Id="233" Count="0" />
      <LineId Id="612" Count="0" />
      <LineId Id="234" Count="0" />
      <LineId Id="419" Count="1" />
      <LineId Id="941" Count="0" />
      <LineId Id="1055" Count="1" />
      <LineId Id="944" Count="6" />
      <LineId Id="955" Count="0" />
      <LineId Id="951" Count="1" />
      <LineId Id="956" Count="0" />
      <LineId Id="953" Count="1" />
      <LineId Id="1082" Count="0" />
      <LineId Id="943" Count="0" />
      <LineId Id="13" Count="0" />
      <LineId Id="121" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>